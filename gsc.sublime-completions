{
	"scope": "source.gsc",

	"completions":
[
		"gsc",
"#include common_scripts\\utility;",
"#include maps\\_anim;" ,
"#include maps\\_busing;",
"#include maps\\_mc_hudsethintstring;",
"#include maps\\_music;" ,
"#include maps\\_utility;" ,
"#include maps\\_zombiemode_utility;" ,
"#using_animtree(  \"generic_human\"  );",
"\"script_noteworthy\"",
"\"targetname\"",
"break;",
"continue;",
"level",
"return;",
"script_noteworthy",
"targetname",
"thread ",
"undefined",
// { "trigger": "_delete", "contents": "_delete( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "_Earthquake", "contents": "_Earthquake( ${1:scale},${2:duration},${3:source},${4:radius} );//maps\\_utility.gsc:"},
// { "trigger": "_flag_wait_trigger", "contents": "_flag_wait_trigger( ${1:message},${2:continuous} );//maps\\_utility.gsc:"},
// { "trigger": "_linkto", "contents": "_linkto( ${1:targ},${2:tag},${3:org},${4:angles} );//maps\\_utility.gsc:"},
// { "trigger": "_setLightIntensity", "contents": "_setLightIntensity( ${1:val} );//maps\\_utility.gsc:"},
// { "trigger": "_setsaveddvar", "contents": "_setsaveddvar( ${1:var},${2:val} );//maps\\_utility.gsc:"},
// { "trigger": "_wait", "contents": "_wait( ${1:timer} );//maps\\_utility.gsc:"},
// { "trigger": "achievement_notify", "contents": "achievement_notify( ${1:notify_name} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "activate_trigger_with_noteworthy", "contents": "activate_trigger_with_noteworthy( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "activate_trigger_with_targetname", "contents": "activate_trigger_with_targetname( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "add_dialogue_line", "contents": "add_dialogue_line( ${1:name},${2:msg} );//maps\\_utility.gsc:"},
// { "trigger": "add_earthquake", "contents": "add_earthquake( ${1:name},${2:mag},${3:duration},${4:radius} );//maps\\_utility.gsc:"},
// { "trigger": "add_endon", "contents": "add_endon( ${1:name} );//maps\\_utility.gsc:"},
// { "trigger": "add_func", "contents": "add_func( ${1:func},${2:parm1},${3:parm2},${4:parm3} );//maps\\_utility.gsc:"},
// { "trigger": "add_global_spawn_function", "contents": "add_global_spawn_function( ${1:team},${2:function},${3:param1},${4:param2},${5:param3} );//maps\\_utility.gsc:"},
// { "trigger": "add_hint_string", "contents": "add_hint_string( ${1:name},${2:string},${3:optionalFunc} );//maps\\_utility.gsc:"},
// { "trigger": "add_later_round_spawners", "contents": "add_later_round_spawners( ${1} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "add_player_spawnpoint", "contents": "add_player_spawnpoint( ${1:spawnpoint} );//maps\\_utility.gsc:"},
// { "trigger": "add_poi_attractor", "contents": "add_poi_attractor( ${1:zombie_poi} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "add_sound", "contents": "add_sound( ${1:ref},${2:alias} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "add_spawn_function", "contents": "add_spawn_function( ${1:function},${2:param1},${3:param2},${4:param3},${5:param4} );//maps\\_utility.gsc:"},
// { "trigger": "add_spawner", "contents": "add_spawner( ${1:spawner} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "add_start", "contents": "add_start( ${1:msg},${2:func},${3:loc_string} );//maps\\_utility.gsc:"},
// { "trigger": "add_to_array", "contents": "add_to_array( ${1:array},${2:ent} );//maps\\_utility.gsc:"},
// { "trigger": "add_to_spectate_list", "contents": "add_to_spectate_list( ${1} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "add_wait", "contents": "add_wait( ${1:func},${2:parm1},${3:parm2},${4:parm3} );//maps\\_utility.gsc:"},
// { "trigger": "add_zombie_hint", "contents": "add_zombie_hint( ${1:ref},${2:text} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "all_chunks_destroyed", "contents": "all_chunks_destroyed( ${1:barrier_chunks} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "all_chunks_intact", "contents": "all_chunks_intact( ${1:barrier_chunks} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "apply_end_fog", "contents": "apply_end_fog( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "apply_fog", "contents": "apply_fog( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "arcadeMode", "contents": "arcadeMode( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "arcademode_assignpoints", "contents": "arcademode_assignpoints( ${1:amountDvar},${2:player} );//maps\\_utility.gsc:"},
// { "trigger": "autosave_by_name", "contents": "autosave_by_name( ${1:name} );//maps\\_utility.gsc:"},
// { "trigger": "autosave_by_name_thread", "contents": "autosave_by_name_thread( ${1:name},${2:timeout} );//maps\\_utility.gsc:"},
// { "trigger": "autosave_now", "contents": "autosave_now( ${1:optional_useless_string},${2:suppress_print} );//maps\\_utility.gsc:"},
// { "trigger": "autosave_or_timeout", "contents": "autosave_or_timeout( ${1:name},${2:timeout} );//maps\\_utility.gsc:"},
// { "trigger": "battlechatter_off", "contents": "battlechatter_off( ${1:team} );//maps\\_utility.gsc:"},
// { "trigger": "battlechatter_on", "contents": "battlechatter_on( ${1:team} );//maps\\_utility.gsc:"},
// { "trigger": "battlechatter_on_thread", "contents": "battlechatter_on_thread( ${1:team} );//maps\\_utility.gsc:"},
// { "trigger": "brush_Delete", "contents": "brush_Delete( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "brush_Show", "contents": "brush_Show( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "brush_throw", "contents": "brush_throw( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "buildBCAlias", "contents": "buildBCAlias( ${1:action},${2:type},${3:modifier} );//maps\\_utility.gsc:"},
// { "trigger": "can_attract", "contents": "can_attract( ${1:attractor} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "chain_off", "contents": "chain_off( ${1:chain} );//maps\\_utility.gsc:"},
// { "trigger": "chain_on", "contents": "chain_on( ${1:chain} );//maps\\_utility.gsc:"},
// { "trigger": "change_player_health_packets", "contents": "change_player_health_packets( ${1:num} );//maps\\_utility.gsc:"},
// { "trigger": "check_force_color", "contents": "check_force_color( ${1:_color} );//maps\\_utility.gsc:"},
// { "trigger": "clear_colors", "contents": "clear_colors( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "clear_enemy_passthrough", "contents": "clear_enemy_passthrough( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "clear_exception", "contents": "clear_exception( ${1:type} );//common_scripts\\utility.gsc:"},
// { "trigger": "clear_force_color", "contents": "clear_force_color( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "clear_player_spawnpoints", "contents": "clear_player_spawnpoints( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "clear_promotion_order", "contents": "clear_promotion_order( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "clear_run_anim", "contents": "clear_run_anim( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "clear_team_colors", "contents": "clear_team_colors( ${1:team} );//maps\\_utility.gsc:"},
// { "trigger": "clearThreatBias", "contents": "clearThreatBias( ${1:group1},${2:group2} );//maps\\_utility.gsc:"},
// { "trigger": "closerFunc", "contents": "closerFunc( ${1:dist1},${2:dist2} );//maps\\_utility.gsc:"},
// { "trigger": "collectible_corpse_spawn", "contents": "collectible_corpse_spawn( ${1:origin_target},${2:enemy_char_model_function} );//maps\\_utility.gsc:"},
// { "trigger": "compareSizes", "contents": "compareSizes( ${1:org},${2:array},${3:dist},${4:compareFunc} );//maps\\_utility.gsc:"},
// { "trigger": "compareSizesFx", "contents": "compareSizesFx( ${1:org},${2:array},${3:dist},${4:compareFunc} );//maps\\_utility.gsc:"},
// { "trigger": "coop_warp_player", "contents": "coop_warp_player( ${1:struct} );//maps\\_utility.gsc:"},
// { "trigger": "coopGame", "contents": "coopGame( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "cqb_aim", "contents": "cqb_aim( ${1:the_target} );//maps\\_utility.gsc:"},
// { "trigger": "cqb_walk", "contents": "cqb_walk( ${1:on_or_off} );//maps\\_utility.gsc:"},
// { "trigger": "create_and_play_dialog", "contents": "create_and_play_dialog( ${1:player_index},${2:dialog_category},${3:waittime},${4:response} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "create_and_play_responses", "contents": "create_and_play_responses( ${1:player_index},${2:dialog_category},${3:waittime} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "create_flags_and_return_tokens", "contents": "create_flags_and_return_tokens( ${1:flags} );//common_scripts\\utility.gsc:"},
// { "trigger": "custom_battlechatter", "contents": "custom_battlechatter( ${1:string} );//maps\\_utility.gsc:"},
// { "trigger": "death_waiter", "contents": "death_waiter( ${1:notifyString} );//maps\\_utility.gsc:"},
// { "trigger": "default_fog_print", "contents": "default_fog_print( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "dialogue_queue", "contents": "dialogue_queue( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "disable_ai_color", "contents": "disable_ai_color( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "disable_auto_adjust_threatbias", "contents": "disable_auto_adjust_threatbias( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "disable_careful", "contents": "disable_careful( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "disable_cqbwalk", "contents": "disable_cqbwalk( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "disable_long_death", "contents": "disable_long_death( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "disable_oneshotfx_with_noteworthy", "contents": "disable_oneshotfx_with_noteworthy( ${1:noteworthy} );//maps\\_utility.gsc:"},
// { "trigger": "disable_pain", "contents": "disable_pain( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "disable_replace_on_death", "contents": "disable_replace_on_death( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "do_in_order", "contents": "do_in_order( ${1:func1},${2:param1},${3:func2},${4:param2} );//maps\\_utility.gsc:"},
// { "trigger": "do_player_killstreak_dialog", "contents": "do_player_killstreak_dialog( ${1:player_index},${2:sound_to_play},${3:waittim} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "draw_arrow", "contents": "draw_arrow( ${1:start},${2:end},${3:color} );//maps\\_utility.gsc:"},
// { "trigger": "draw_arrow_time", "contents": "draw_arrow_time( ${1:start},${2:end},${3:color},${4:duration} );//maps\\_utility.gsc:"},
// { "trigger": "draw_debug_line", "contents": "draw_debug_line( ${1:start},${2:end},${3:time} );//common_scripts\\utility.gsc:"},
// { "trigger": "draw_line_ent_to_ent", "contents": "draw_line_ent_to_ent( ${1:ent1},${2:ent2} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "draw_line_ent_to_pos", "contents": "draw_line_ent_to_pos( ${1:ent},${2:pos},${3:end_on} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "draw_line_for_time", "contents": "draw_line_for_time( ${1:org1},${2:org2},${3:r},${4:g},${5:b},${6:timer} );//maps\\_utility.gsc:"},
// { "trigger": "draw_line_from_ent_for_time", "contents": "draw_line_from_ent_for_time( ${1:ent},${2:org},${3:r},${4:g},${5:b},${6:timer} );//maps\\_utility.gsc:"},
// { "trigger": "draw_line_from_ent_to_ent_for_time", "contents": "draw_line_from_ent_to_ent_for_time( ${1:ent1},${2:ent2},${3:r},${4:g},${5:b},${6:timer} );//maps\\_utility.gsc:"},
// { "trigger": "draw_line_from_ent_to_ent_until_notify", "contents": "draw_line_from_ent_to_ent_until_notify( ${1:ent1},${2:ent2},${3:r},${4:g},${5:b},${6:notifyEnt},${7:notifyString} );//maps\\_utility.gsc:"},
// { "trigger": "draw_line_to_ent_for_time", "contents": "draw_line_to_ent_for_time( ${1:org1},${2:ent},${3:r},${4:g},${5:b},${6:timer} );//maps\\_utility.gsc:"},
// { "trigger": "draw_line_until_notify", "contents": "draw_line_until_notify( ${1:org1},${2:org2},${3:r},${4:g},${5:b},${6:notifyEnt},${7:notifyString} );//maps\\_utility.gsc:"},
// { "trigger": "drawcylinder", "contents": "drawcylinder( ${1:pos},${2:rad},${3:height} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "dronespawn", "contents": "dronespawn( ${1:spawner} );//maps\\_utility.gsc:"},
// { "trigger": "empty_init_func", "contents": "empty_init_func( ${1:empty} );//common_scripts\\utility.gsc:"},
// { "trigger": "enable_ai_color", "contents": "enable_ai_color( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "enable_auto_adjust_threatbias", "contents": "enable_auto_adjust_threatbias( ${1:playe} );//maps\\_utility.gsc:"},
// { "trigger": "enable_careful", "contents": "enable_careful( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "enable_cqbwalk", "contents": "enable_cqbwalk( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "enable_long_death", "contents": "enable_long_death( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "enable_pain", "contents": "enable_pain( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag", "contents": "ent_flag( ${1:message} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_assert", "contents": "ent_flag_assert( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_clear", "contents": "ent_flag_clear( ${1:message} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_clear_delayed", "contents": "ent_flag_clear_delayed( ${1:message},${2:delay} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_init", "contents": "ent_flag_init( ${1:message} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_init_ai_standards", "contents": "ent_flag_init_ai_standards( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_set", "contents": "ent_flag_set( ${1:message} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_set_delayed", "contents": "ent_flag_set_delayed( ${1:message},${2:delay} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_wait", "contents": "ent_flag_wait( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_wait_ai_standards", "contents": "ent_flag_wait_ai_standards( ${1:message} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_wait_either", "contents": "ent_flag_wait_either( ${1:flag1},${2:flag2} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_wait_or_timeout", "contents": "ent_flag_wait_or_timeout( ${1:flagname},${2:timer} );//maps\\_utility.gsc:"},
// { "trigger": "ent_flag_waitopen", "contents": "ent_flag_waitopen( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "error", "contents": "error( ${1:message} );//maps\\_utility.gsc:"},
// { "trigger": "expandMaxs", "contents": "expandMaxs( ${1:maxs},${2:point} );//maps\\_utility.gsc:"},
// { "trigger": "expandMins", "contents": "expandMins( ${1:mins},${2:point} );//maps\\_utility.gsc:"},
// { "trigger": "fartherFunc", "contents": "fartherFunc( ${1:dist1},${2:dist2} );//maps\\_utility.gsc:"},
// { "trigger": "fileprint_chk", "contents": "fileprint_chk( ${1:file },${2:str} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_end", "contents": "fileprint_end( ${1} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_map_entity_end", "contents": "fileprint_map_entity_end( ${1} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_map_entity_start", "contents": "fileprint_map_entity_start( ${1} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_map_header", "contents": "fileprint_map_header( ${1:bInclude_blank_worldspawn} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_map_keypairprint", "contents": "fileprint_map_keypairprint( ${1:key1},${2:key2} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_map_start", "contents": "fileprint_map_start( ${1:file} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_radiant_vec", "contents": "fileprint_radiant_vec( ${1:vector} );//common_scripts\\utility.gsc:"},
// { "trigger": "fileprint_start", "contents": "fileprint_start( ${1:file} );//common_scripts\\utility.gsc:"},
// { "trigger": "findBoxCenter", "contents": "findBoxCenter( ${1:mins},${2:maxs} );//maps\\_utility.gsc:"},
// { "trigger": "flashMonitor", "contents": "flashMonitor( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "flashNearbyAllies", "contents": "flashNearbyAllies( ${1:baseDuration},${2:team} );//maps\\_utility.gsc:"},
// { "trigger": "flashRumbleLoop", "contents": "flashRumbleLoop( ${1:duration} );//maps\\_utility.gsc:"},
// { "trigger": "flat_angle", "contents": "flat_angle( ${1:angle} );//maps\\_utility.gsc:"},
// { "trigger": "flat_origin", "contents": "flat_origin( ${1:org} );//maps\\_utility.gsc:"},
// { "trigger": "float_print3d", "contents": "float_print3d( ${1:msg},${2:time} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "flood_begin", "contents": "flood_begin( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "flood_Spawn", "contents": "flood_Spawn( ${1:spawners} );//maps\\_utility.gsc:"},
// { "trigger": "force_custom_battlechatter", "contents": "force_custom_battlechatter( ${1:string},${2:targetAI} );//maps\\_utility.gsc:"},
// { "trigger": "giveachievement_wrapper", "contents": "giveachievement_wrapper( ${1:achievement},${2:all_players} );//maps\\_utility.gsc:"},
// { "trigger": "gun_recall", "contents": "gun_recall( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "gun_remove", "contents": "gun_remove( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "gun_switchto", "contents": "gun_switchto( ${1:weaponName},${2:whichHand} );//maps\\_utility.gsc:"},
// { "trigger": "guy_array_enter_vehicle", "contents": "guy_array_enter_vehicle( ${1:guy},${2:vehicle} );//maps\\_utility.gsc:"},
// { "trigger": "guy_enter_vehicle", "contents": "guy_enter_vehicle( ${1:guy},${2:vehicle} );//maps\\_utility.gsc:"},
// { "trigger": "guy_runtovehicle_load", "contents": "guy_runtovehicle_load( ${1:guy},${2:vehicle} );//maps\\_utility.gsc:"},
// { "trigger": "handsignal", "contents": "handsignal( ${1:xanim},${2:ender},${3:waiter} );//maps\\_utility.gsc:"},
// { "trigger": "has_color", "contents": "has_color( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "include_achievement", "contents": "include_achievement( ${1:achievement},${2:var1},${3:var2},${4:var3},${5:var4} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "init_trigger_flags", "contents": "init_trigger_flags( ${1} );//common_scripts\\utility.gsc:"},
// { "trigger": "init_utility", "contents": "init_utility( ${1} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "instantly_promote_nearest_friendly", "contents": "instantly_promote_nearest_friendly( ${1:colorFrom},${2:colorTo} );//maps\\_utility.gsc:"},
// { "trigger": "instantly_promote_nearest_friendly_with_classname", "contents": "instantly_promote_nearest_friendly_with_classname( ${1:colorFrom},${2:colorTo},${3:classname} );//maps\\_utility.gsc:"},
// { "trigger": "instantly_set_color_from_array", "contents": "instantly_set_color_from_array( ${1:array},${2:color} );//maps\\_utility.gsc:"},
// { "trigger": "instantly_set_color_from_array_with_classname", "contents": "instantly_set_color_from_array_with_classname( ${1:array},${2:color},${3:classname} );//maps\\_utility.gsc:"},
// { "trigger": "is_coop", "contents": "is_coop( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "is_dead_sentient", "contents": "is_dead_sentient( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "is_default_start", "contents": "is_default_start( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "is_german_build", "contents": "is_german_build( ${1} );//common_scripts\\utility.gsc:"},
// { "trigger": "is_hero", "contents": "is_hero( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "issue_color_orders", "contents": "issue_color_orders( ${1:color_team},${2:team} );//maps\\_utility.gsc:"},
// { "trigger": "key_hint_print", "contents": "key_hint_print( ${1:message},${2:binding} );//maps\\_utility.gsc:"},
// { "trigger": "linetime", "contents": "linetime( ${1:start},${2:end},${3:color},${4:timer} );//maps\\_utility.gsc:"},
// { "trigger": "make_hero", "contents": "make_hero( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "mission", "contents": "mission( ${1:name} );//maps\\_utility.gsc:"},
// { "trigger": "missionFailedWrapper", "contents": "missionFailedWrapper( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "mix_down", "contents": "mix_down( ${1:sound} );//maps\\_utility.gsc:"},
// { "trigger": "mix_up", "contents": "mix_up( ${1:sound} );//maps\\_utility.gsc:"},
// { "trigger": "MusicPlayWrapper", "contents": "MusicPlayWrapper( ${1:song},${2:timescale},${3:overrideCheat} );//maps\\_utility.gsc:"},
// { "trigger": "nextmission", "contents": "nextmission( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "normal_friendly_fire_penalty", "contents": "normal_friendly_fire_penalty( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "player_died_recently", "contents": "player_died_recently( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "promote_nearest_friendly", "contents": "promote_nearest_friendly( ${1:colorFrom},${2:colorTo} );//maps\\_utility.gsc:"},
// { "trigger": "promote_nearest_friendly_with_classname", "contents": "promote_nearest_friendly_with_classname( ${1:colorFrom},${2:colorTo},${3:classname} );//maps\\_utility.gsc:"},
// { "trigger": "putGunAway", "contents": "putGunAway( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "radio_dialogue", "contents": "radio_dialogue( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "radio_dialogue_queue", "contents": "radio_dialogue_queue( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "radio_dialogue_queue", "contents": "radio_dialogue_queue( ${1:msg} );//maps\\_utility.gsc:"},
// { "trigger": "radio_dialogue_stop", "contents": "radio_dialogue_stop( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "remove_noColor_from_array", "contents": "remove_noColor_from_array( ${1:ai} );//maps\\_utility.gsc:"},
// { "trigger": "replace_on_death", "contents": "replace_on_death( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "reportExploderIds", "contents": "reportExploderIds( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "russian_diary_event", "contents": "russian_diary_event( ${1:outcome} );//maps\\_utility.gsc:"},
// { "trigger": "save_friendlies", "contents": "save_friendlies( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "script_delay", "contents": "script_delay( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "script_gen_dump_addline", "contents": "script_gen_dump_addline( ${1:string},${2:signature} );//common_scripts\\utility.gsc:"},
// { "trigger": "script_wait", "contents": "script_wait( ${1:called_from_spawner} );//maps\\_utility.gsc:"},
// { "trigger": "scriptPrintln", "contents": "scriptPrintln( ${1:channel},${2:ms} );//common_scripts\\utility.gsc:"},
// { "trigger": "scrub", "contents": "scrub( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "sg_csv_addtype", "contents": "sg_csv_addtype( ${1:type},${2:string} );//maps\\_utility.gsc:"},
// { "trigger": "sg_csv_soundadd", "contents": "sg_csv_soundadd( ${1:type},${2:loadspec} );//maps\\_utility.gsc:"},
// { "trigger": "sg_getanim", "contents": "sg_getanim( ${1:animation} );//maps\\_utility.gsc:"},
// { "trigger": "sg_getanimtree", "contents": "sg_getanimtree( ${1:animtree} );//maps\\_utility.gsc:"},
// { "trigger": "sg_getfx", "contents": "sg_getfx( ${1:fx} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precacheanim", "contents": "sg_precacheanim( ${1:animation},${2:animtree} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precachefx", "contents": "sg_precachefx( ${1:fx} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precacheitem", "contents": "sg_precacheitem( ${1:item} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precachemenu", "contents": "sg_precachemenu( ${1:menu} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precachemodel", "contents": "sg_precachemodel( ${1:model} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precacherumble", "contents": "sg_precacherumble( ${1:rumble} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precacheshader", "contents": "sg_precacheshader( ${1:shader} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precacheshellshock", "contents": "sg_precacheshellshock( ${1:shock} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precachestring", "contents": "sg_precachestring( ${1:string} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precacheturret", "contents": "sg_precacheturret( ${1:turret} );//maps\\_utility.gsc:"},
// { "trigger": "sg_precachevehicle", "contents": "sg_precachevehicle( ${1:vehicle} );//maps\\_utility.gsc:"},
// { "trigger": "sg_standard_includes", "contents": "sg_standard_includes( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "sg_wait_dump", "contents": "sg_wait_dump( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "trigger_off_proc", "contents": "trigger_off_proc( ${1} );//common_scripts\\utility.gsc:"},
// { "trigger": "trigger_on_proc", "contents": "trigger_on_proc( ${1} );//common_scripts\\utility.gsc:"},
// { "trigger": "unmake_hero", "contents": "unmake_hero( ${1} );//maps\\_utility.gsc:"},
// { "trigger": "update_on_poi_removal ", "contents": "update_on_poi_removal( ${1:zombie_poi} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "update_poi_on_death", "contents": "update_poi_on_death( ${1:zombie_poi} );//maps\\_zombiemode_utility.gsc:"},
// { "trigger": "update_trigger_based_on_flags", "contents": "update_trigger_based_on_flags( ${1} );//common_scripts\\utility.gsc:"},
{ "trigger": "ACos", "contents": "ACos( ${1:Cosine Value} );" },
{ "trigger": "activate_exploder", "contents": "activate_exploder( ${1:num} );//maps\\_utility.gsc:"},
{ "trigger": "activate_exploder_on_clients", "contents": "activate_exploder_on_clients( ${1:nu} );//maps\\_utility.gsc:"},
{ "trigger": "activate_individual_exploder", "contents": "activate_individual_exploder( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "activate_trigger", "contents": "activate_trigger( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "activate_zombie_point_of_interest", "contents": "activate_zombie_point_of_interest( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "AddAIEventListener", "contents": "AddAIEventListener( ${1:Event} );" },
{ "trigger": "AddNodeToCurve", "contents": "AddNodeToCurve( ${1} );" },
{ "trigger": "AddTestClient", "contents": "AddTestClient( ${1} );" },
{ "trigger": "AddVehicleToCompass", "contents": "AddVehicleToCompass( ${1} );" },
{ "trigger": "AdsButtonPressed", "contents": "AdsButtonPressed( ${1} );" },
{ "trigger": "AimAtPos", "contents": "AimAtPos( ${1:Point} );" },
{ "trigger": "AllClientsPrint", "contents": "AllClientsPrint( ${1:String} );" },
{ "trigger": "AllowADS", "contents": "AllowADS( ${1:Player ADS?} );" },
{ "trigger": "AllowCrouch", "contents": "AllowCrouch( ${1:Player Crouch?} );" },
{ "trigger": "AllowedStances", "contents": "AllowedStances( ${1:Stance} );" },
{ "trigger": "AllowJump", "contents": "AllowJump( ${1:Player Jump?} );" },
{ "trigger": "AllowLean", "contents": "AllowLean( ${1:Player Lean?} );" },
{ "trigger": "AllowMelee", "contents": "AllowMelee( ${1:Melee?} );" },
{ "trigger": "AllowProne", "contents": "AllowProne( ${1:Player Prone?} );" },
{ "trigger": "AllowSpectateTeam", "contents": "AllowSpectateTeam( ${1:Team}, ${2:Spectate} );" },
{ "trigger": "AllowSprint", "contents": "AllowSprint( ${1:Player Sprint?} );" },
{ "trigger": "AllowStand", "contents": "AllowStand( ${1:Player Stand} );" },
{ "trigger": "alphabetize\tsort array", "contents": "alphabetize( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "AmbientPlay", "contents": "AmbientPlay( ${1:Ambient}, ${2:Fade Time} );" },
{ "trigger": "AmbientStop", "contents": "AmbientStop( ${1} );" },
{ "trigger": "Amplify", "contents": "Amplify( ${1:Origin, ${2:Minimum Range}, ${3:Maximum Range}, ${4:Minimum Volume}, ${5:Maximum Volume}, ${6:Fall Off} } );" },
{ "trigger": "AmplifyStop", "contents": "AmplifyStop( ${1:Fade Time} );" },
{ "trigger": "angle_dif", "contents": "angle_dif( ${1:oldangle},${2:newangl} );//common_scripts\\utility.gsc:"},
{ "trigger": "AnglesToForward", "contents": "AnglesToForward( ${1:Angles} );" },
{ "trigger": "AnglesToRight", "contents": "AnglesToRight( ${1:Angles} );" },
{ "trigger": "AnglesToUp", "contents": "AnglesToUp( ${1:Angles} );" },
{ "trigger": "anim_stopanimscripted", "contents": "anim_stopanimscripted( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "AnimCustom", "contents": "AnimCustom( ${1:Animscript} );" },
{ "trigger": "AnimHasNotetrack", "contents": "AnimHasNotetrack( ${1:Animation}, ${2:Note Track} );" },
{ "trigger": "AnimMode", "contents": "AnimMode( ${1:Mode} );" },
{ "trigger": "AnimRelative", "contents": "AnimRelative( ${1:Notify}, ${2:Origin}, ${3:Angles}, ${4:Animation}, ${5:Mode}, ${6:Root} );" },
{ "trigger": "AnimScripted", "contents": "AnimScripted( ${1:Notify}, ${2:Origin}, ${3:Angles}, ${4:Animation}, ${5:Mode}, ${6:Root} );" },
{ "trigger": "Announcement", "contents": "Announcement( ${1:String} );" },
{ "trigger": "any_player_IsTouching", "contents": "any_player_IsTouching( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "AnyAmmoForWeaponModes", "contents": "AnyAmmoForWeaponModes( ${1:Weaponfile Name} );" },
{ "trigger": "array_add", "contents": "array_add( ${1:array},${2:ent} );//maps\\_utility.gsc:"},
{ "trigger": "array_check_for_dupes", "contents": "array_check_for_dupes( ${1:array},${2:single} );//maps\\_utility.gsc:"},
{ "trigger": "array_combine", "contents": "array_combine( ${1:array1},${2:array2} );//maps\\_utility.gsc:"},
{ "trigger": "array_combine_keys", "contents": "array_combine_keys( ${1:array1},${2:array2} );//maps\\_utility.gsc:"},
{ "trigger": "array_Delete", "contents": "array_Delete( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "array_exclude", "contents": "array_exclude( ${1:array},${2:arrayExclude} );//maps\\_utility.gsc:"},
{ "trigger": "array_insert", "contents": "array_insert( ${1:array},${2:object},${3:index} );//maps\\_utility.gsc:"},
{ "trigger": "array_levelthread", "contents": "array_levelthread( ${1:array},${2:process},${3:var1},${4:var2},${5:var3} );//maps\\_utility.gsc:"},
{ "trigger": "array_limiter", "contents": "array_limiter( ${1:array},${2:total} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "array_merge", "contents": "array_merge( ${1:array1},${2:array2} );//maps\\_utility.gsc:"},
{ "trigger": "array_merge_links", "contents": "array_merge_links( ${1:array1},${2:array2} );//maps\\_utility.gsc:"},
{ "trigger": "array_notify", "contents": "array_notify( ${1:ents},${2:notifier} );//maps\\_utility.gsc:"},
{ "trigger": "array_randomize", "contents": "array_randomize( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "array_remove", "contents": "array_remove( ${1:ents},${2:remover},${3:keepArrayKeys} );//maps\\_utility.gsc:"},
{ "trigger": "array_remove_index", "contents": "array_remove_index( ${1:array},${2:index} );//maps\\_utility.gsc:"},
{ "trigger": "array_remove_nokeys", "contents": "array_remove_nokeys( ${1:ents},${2:remover} );//maps\\_utility.gsc:"},
{ "trigger": "array_removeDead", "contents": "array_removeDead( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "array_removeDead_keepkeys", "contents": "array_removeDead_keepkeys( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "array_removeUndefined", "contents": "array_removeUndefined( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "array_reverse", "contents": "array_reverse( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "array_spawn", "contents": "array_spawn( ${1:spawners} );//maps\\_utility.gsc:"},
{ "trigger": "array_swap", "contents": "array_swap( ${1:array},${2:index1},${3:index2} );//maps\\_utility.gsc:"},
{ "trigger": "array_thread", "contents": "array_thread( ${1:entities},${2:process}${3:,${4:var1},${5:var2},${6:var3}} );//common_scripts\\utility.gsc:"},
{ "trigger": "array_thread4", "contents": "array_thread4( ${1:entities},${2:process},${3:var1},${4:var2},${5:var3},${6:var4} );//common_scripts\\utility.gsc:"},
{ "trigger": "array_thread5", "contents": "array_thread5( ${1:entities},${2:process},${3:var1},${4:var2},${5:var3},${6:var4},${7:var5} );//common_scripts\\utility.gsc:"},
{ "trigger": "array_validate", "contents": "array_validate( ${1:array} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "array_wait", "contents": "array_wait( ${1:array},${2:msg},${3:timeou} );//maps\\_utility.gsc:"},
{ "trigger": "ASin", "contents": "ASin( ${1:Sine Value} );" },
{ "trigger": "Assert", "contents": "Assert( ${1:Value} );" },
{ "trigger": "AssertEx", "contents": "AssertEx( ${1:Value}, ${2:Message} );" },
{ "trigger": "AssertMsg", "contents": "AssertMsg( ${1:Message} );" },
{ "trigger": "assign_animtree", "contents": "assign_animtree( ${1:animname} );//maps\\_utility.gsc:"},
{ "trigger": "assign_model", "contents": "assign_model( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "assign_zombie_point_of_interest ", "contents": "assign_zombie_point_of_interest( ${1:origin},${2:po} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "ATan", "contents": "ATan( ${1:Tangent Value} );" },
{ "trigger": "Attach", "contents": "Attach( ${1:Model Name}, ${2:Tag Name}, ${3:Ignore Collision} );" },
{ "trigger": "AttachPath", "contents": "AttachPath( ${1} );" },
{ "trigger": "AttackButtonPressed", "contents": "AttackButtonPressed( ${1:Button Name} );" },
{ "trigger": "BadPlace_Arc", "contents": "BadPlace_Arc( ${1:Name}, ${2:Duration}, ${3:Origin}, ${4:Radius}, ${5:Height}, ${6:Direction}, ${7:Right Angle}, ${8:Left Angle}, ${9:Team} );" },
{ "trigger": "BadPlace_Brush", "contents": "BadPlace_Brush( ${1:Name}, ${2:Duration}, ${3:Brush Entity}, ${4:Team} );" },
{ "trigger": "BadPlace_Cylinder", "contents": "BadPlace_Cylinder( ${1:Name}, ${2:Duration}, ${3:Origin}, ${4:Radius}, ${5:Height}, ${6:Team}, ${7:Team} );" },
{ "trigger": "BadPlace_Delete", "contents": "BadPlace_Delete( ${1:Bad Place Identifier} );" },
{ "trigger": "Ban", "contents": "Ban( ${1:Client Number} );" },
{ "trigger": "Battlemap_AddMarker", "contents": "Battlemap_AddMarker( ${1} );" },
{ "trigger": "Battlemap_RemoveMarker", "contents": "Battlemap_RemoveMarker( ${1} );" },
{ "trigger": "BeginLocationSelection", "contents": "BeginLocationSelection( ${1:Location Selector}, ${2:Selector Size} );" },
{ "trigger": "BeginPrediction", "contents": "BeginPrediction( ${1} );" },
{ "trigger": "BloodImpact", "contents": "BloodImpact( ${1} );" },
{ "trigger": "BoundsWouldTelefrag", "contents": "BoundsWouldTelefrag( ${1} );" },
{ "trigger": "BreakRope", "contents": "BreakRope( ${1} );" },
{ "trigger": "BuildCurve", "contents": "BuildCurve( ${1} );" },
{ "trigger": "BulletSpread", "contents": "BulletSpread( ${1} );" },
{ "trigger": "BulletTrace", "contents": "BulletTrace( ${1:Start},${2:End},${3:Hit Characters},${4:Ignore Entity} );" },
{ "trigger": "BulletTracePassed", "contents": "BulletTracePassed( ${1:Start},${2:End},${3:Hit Characters},${4:Ignore Entity} );" },
{ "trigger": "BulletTracer", "contents": "BulletTracer( ${1} );" },
{ "trigger": "ButtonPressed", "contents": "ButtonPressed( ${1} );" },
{ "trigger": "CameraLinkToCurve", "contents": "CameraLinkToCurve( ${1} );" },
{ "trigger": "CanAttackEnemyNode", "contents": "CanAttackEnemyNode( ${1} );" },
{ "trigger": "CanSee", "contents": "CanSee( ${1:Target} );" },
{ "trigger": "CanShoot", "contents": "CanShoot( ${1:Shoot At Position}, ${2:Offset From Gun} );" },
{ "trigger": "CanSpawnTurret", "contents": "CanSpawnTurret( ${1} );" },
{ "trigger": "CanUseTurret", "contents": "CanUseTurret( ${1:Turret} );" },
{ "trigger": "case", "contents": "case ${2:is equal to}:\n\t${3:}\n\tbreak;\n" },
{ "trigger": "ChangeFontScaleOverTime", "contents": "ChangeFontScaleOverTime( ${1:Time} );" },
{ "trigger": "ChangeLevel", "contents": "ChangeLevel( ${1:Map Name}, ${2:Persistent?}, ${3:Exit Time} );" },
{ "trigger": "check_point_in_active_zone", "contents": "check_point_in_active_zone( ${1:origin} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "check_point_in_playable_area", "contents": "check_point_in_playable_area( ${1:origin} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "CheckCoverExitPosWithPath", "contents": "CheckCoverExitPosWithPath( ${1:Exit Position} );" },
{ "trigger": "CheckGrenadeLaunch", "contents": "CheckGrenadeLaunch( ${1:Barrel Offset} );" },
{ "trigger": "CheckGrenadeLaunchPos", "contents": "CheckGrenadeLaunchPos( ${1:Barrel Offset}, ${2:Target Position} );" },
{ "trigger": "CheckGrenadeThrow", "contents": "CheckGrenadeThrow( ${1:Hand Offset}, ${2:Method}, ${3:Random Range} );" },
{ "trigger": "CheckGrenadeThrowPos", "contents": "CheckGrenadeThrowPos( ${1:Hand Offset}, ${2:Method}, ${3:Target Position} );" },
{ "trigger": "CheckProne", "contents": "CheckProne( ${1:Position} ${2:Yaw} ${3:Is Prone} );" },
{ "trigger": "Cinematic", "contents": "Cinematic( ${1:Cinematic Name}, ${2:Exit Time} );" },
{ "trigger": "CinematicInGame", "contents": "CinematicInGame( ${1:Cinematic Name} );" },
{ "trigger": "CinematicInGameLoop", "contents": "CinematicInGameLoop( ${1:Cinematic Name} );" },
{ "trigger": "CinematicInGameLoopFromFastfile", "contents": "CinematicInGameLoopFromFastfile( ${1:Cinematic Name} );" },
{ "trigger": "CinematicInGameLoopResident", "contents": "CinematicInGameLoopResident( ${1:Cinematic Name} );" },
{ "trigger": "CinematicInGameSync", "contents": "CinematicInGameSync( ${1:Cinematic Name} );" },
{ "trigger": "clear_deathanim", "contents": "clear_deathanim( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "clear_dvar", "contents": "clear_dvar( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "ClearAllCorpses", "contents": "ClearAllCorpses( ${1} );" },
{ "trigger": "ClearAllTextAfterHudelem", "contents": "ClearAllTextAfterHudelem( ${1} );" },
{ "trigger": "ClearAnim", "contents": "ClearAnim( ${1:Animation}, ${2:Time} );" },
{ "trigger": "ClearEnemy", "contents": "ClearEnemy( ${1} );" },
{ "trigger": "ClearEntityTarget", "contents": "ClearEntityTarget( ${1} );" },
{ "trigger": "ClearFixedNodeSafeVolume", "contents": "ClearFixedNodeSafeVolume( ${1} );" },
{ "trigger": "ClearGoalVolume", "contents": "ClearGoalVolume( ${1} );" },
{ "trigger": "ClearGoalYaw", "contents": "ClearGoalYaw( ${1} );" },
{ "trigger": "ClearGunnerTarget", "contents": "ClearGunnerTarget( ${1} );" },
{ "trigger": "ClearLocalizedStrings", "contents": "ClearLocalizedStrings( ${1:First String} );" },
{ "trigger": "ClearLookAtEnt", "contents": "ClearLookAtEnt( ${1} );" },
{ "trigger": "ClearPerks", "contents": "ClearPerks( ${1} );" },
{ "trigger": "ClearPitchOrient", "contents": "ClearPitchOrient( ${1} );" },
{ "trigger": "ClearPotentialThreat", "contents": "ClearPotentialThreat( ${1} );" },
{ "trigger": "ClearTargetEnt", "contents": "ClearTargetEnt( ${1:Value},${2:KVP} );" },
{ "trigger": "ClearTargetEntity", "contents": "ClearTargetEntity( ${1} );" },
{ "trigger": "ClearTargetYaw", "contents": "ClearTargetYaw( ${1} );" },
{ "trigger": "ClearTurretTarget", "contents": "ClearTurretTarget( ${1} );" },
{ "trigger": "ClientAnnouncement", "contents": "ClientAnnouncement( ${1:Client Number}, ${2:String} );" },
{ "trigger": "ClientClaimTrigger", "contents": "ClientClaimTrigger( ${1:Trigger} );" },
{ "trigger": "clientNotify", "contents": "clientNotify( ${1:even} );//maps\\_utility.gsc:"},
{ "trigger": "ClientPrint", "contents": "ClientPrint( ${1:Client}, ${2:String} );" },
{ "trigger": "ClientReleaseTrigger", "contents": "ClientReleaseTrigger( ${1:Trigger} );" },
{ "trigger": "ClientSysRegister", "contents": "ClientSysRegister( ${1} );" },
{ "trigger": "ClientSysSetState", "contents": "ClientSysSetState( ${1} );" },
{ "trigger": "ClonePlayer", "contents": "ClonePlayer( ${1:Death Animation Duration} );" },
{ "trigger": "CloseFile", "contents": "CloseFile( ${1:File Number} );" },
{ "trigger": "CloseInGameMenu", "contents": "CloseInGameMenu( ${1} );" },
{ "trigger": "CloseMenu", "contents": "CloseMenu( ${1} );" },
{ "trigger": "Closer", "contents": "Closer( ${1:Reference}, ${2:Point A}, ${3:Point B} );" },
{ "trigger": "cointoss", "contents": "cointoss( ${1} );//common_scripts\\utility.gsc:"},
{ "trigger": "CombineAngles", "contents": "CombineAngles( ${1:Angles A}, ${2:Angles B} );" },
{ "trigger": "CommitSave", "contents": "CommitSave( ${1:Save ID} );" },
{ "trigger": "ConnectPaths", "contents": "ConnectPaths( ${1} );" },
{ "trigger": "Cos", "contents": "Cos( ${1:Angle} );" },
{ "trigger": "create_simple_hud\thud", "contents": "create_simple_hud( ${1:client} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "create_zombie_point_of_interest", "contents": "create_zombie_point_of_interest( ${1:attract_dist},${2:num_attractors},${3:added_poi_value},${4:start_turned_on} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "create_zombie_point_of_interest_attractor_positions", "contents": "create_zombie_point_of_interest_attractor_positions( ${1:num_attract_dists},${2:diff_per_dist},${3:attractor_width} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "createExploder", "contents": "createExploder( ${1:fxid} );//maps\\_utility.gsc:"},
{ "trigger": "createLoopEffect", "contents": "createLoopEffect( ${1:fxid} );//maps\\_utility.gsc:"},
{ "trigger": "createOneshotEffect", "contents": "createOneshotEffect( ${1:fxid} );//maps\\_utility.gsc:"},
{ "trigger": "CreatePrintChannel", "contents": "CreatePrintChannel( ${1:Channel Name} );" },
{ "trigger": "CreateRope", "contents": "CreateRope( ${1} );" },
{ "trigger": "CreateThreatBiasGroup", "contents": "CreateThreatBiasGroup( ${1} );" },
{ "trigger": "DamageConeTrace", "contents": "DamageConeTrace( ${1:Damage Position},${2:Ignore Entity} );" },
{ "trigger": "deactivate_zombie_point_of_interest", "contents": "deactivate_zombie_point_of_interest( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "DeactivateChannelVolumes", "contents": "DeactivateChannelVolumes( ${1:Priority}, ${2:Fade Time} );" },
{ "trigger": "DeactivateEq", "contents": "DeactivateEq( ${1:EQ Index}, ${2:Channel Name}, ${3:Band} );" },
{ "trigger": "DeactivateReverb", "contents": "DeactivateReverb( ${1:Priority}, ${2:Fade Time} );" },
{ "trigger": "debug_attack_spots_taken", "contents": "debug_attack_spots_taken( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "debug_blocker", "contents": "debug_blocker( ${1:pos},${2:rad},${3:height} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "debug_breadcrumbs", "contents": "debug_breadcrumbs( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "debug_draw_attractor_positions", "contents": "debug_draw_attractor_positions( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "debug_message", "contents": "debug_message( ${1:message},${2:origin},${3:duration} );//maps\\_utility.gsc:"},
{ "trigger": "debug_message_clear", "contents": "debug_message_clear( ${1:message},${2:origin},${3:duration},${4:extraEndon} );//maps\\_utility.gsc:"},
{ "trigger": "debug_print", "contents": "debug_print( ${1:msg} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "debug_round_advancer", "contents": "debug_round_advancer( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "debug_ui", "contents": "debug_ui( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "debug_warp_point", "contents": "debug_warp_point( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "debugorigin", "contents": "debugorigin( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "debugPrintln", "contents": "debugPrintln( ${1:channel},${2:ms} );//common_scripts\\utility.gsc:"},
{ "trigger": "debugvar", "contents": "debugvar( ${1:msg},${2:timer} );//maps\\_utility.gsc:"},
{ "trigger": "default_start", "contents": "default_start( ${1:func} );//maps\\_utility.gsc:"},
{ "trigger": "delayThread", "contents": "delayThread( ${1:timer},${2:func},${3:param1},${4:param2},${5:param3},${6:param4} );//maps\\_utility.gsc:"},
{ "trigger": "deletable_magic_bullet_shield", "contents": "deletable_magic_bullet_shield( ${1:health},${2:time},${3:oldhealth},${4:maxhealth_modifier} );//maps\\_utility.gsc:"},
{ "trigger": "Delete", "contents": "Delete( ${1} );" },
{ "trigger": "delete_exploder_on_clients", "contents": "delete_exploder_on_clients( ${1:nu} );//maps\\_utility.gsc:"},
{ "trigger": "delete_on_death", "contents": "delete_on_death( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "delete_on_death_wait_sound", "contents": "delete_on_death_wait_sound( ${1:ent},${2:sounddone} );//maps\\_utility.gsc:"},
{ "trigger": "delete_on_not_defined", "contents": "delete_on_not_defined( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "deleteEnt", "contents": "deleteEnt( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "DeleteFakeEnt", "contents": "DeleteFakeEnt( ${1} );" },
{ "trigger": "DeleteFX", "contents": "DeleteFX( ${1} );" },
{ "trigger": "DeleteRope", "contents": "DeleteRope( ${1} );" },
{ "trigger": "DepthInWater", "contents": "DepthInWater( ${1} );" },
{ "trigger": "Destroy", "contents": "Destroy( ${1} );" },
{ "trigger": "destroy_hud\thud", "contents": "destroy_hud( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "Detach", "contents": "Detach( ${1:Model Name}, ${2:Tag Name} );" },
{ "trigger": "DetachAll", "contents": "DetachAll( ${1} );" },
{ "trigger": "Detonate", "contents": "Detonate( ${1:New Owner} );" },
{ "trigger": "DevAddPitch", "contents": "DevAddPitch( ${1:Pitch Angle} );" },
{ "trigger": "DevAddRoll", "contents": "DevAddRoll( ${1:Roll Angle} );" },
{ "trigger": "DevAddYaw", "contents": "DevAddYaw( ${1:Yaw Angle} );" },
{ "trigger": "die", "contents": "die( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "disable_trigger", "contents": "disable_trigger( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "disable_trigger_with_noteworthy", "contents": "disable_trigger_with_noteworthy( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "disable_trigger_with_targetname", "contents": "disable_trigger_with_targetname( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "DisableAimAssist", "contents": "DisableAimAssist( ${1} );" },
{ "trigger": "DisableGrenadeTouchDamage", "contents": "DisableGrenadeTouchDamage( ${1} );" },
{ "trigger": "DisableInvulnerability", "contents": "DisableInvulnerability( ${1} );" },
{ "trigger": "DisableOffhandWeapons", "contents": "DisableOffhandWeapons( ${1} );" },
{ "trigger": "DisableTrigger", "contents": "DisableTrigger()" },
{ "trigger": "DisableTurretDismount", "contents": "DisableTurretDismount( ${1} );" },
{ "trigger": "DisableWeaponCycling", "contents": "DisableWeaponCycling( ${1} );" },
{ "trigger": "DisableWeapons", "contents": "DisableWeapons( ${1} );" },
{ "trigger": "DisconnectPaths", "contents": "DisconnectPaths( ${1} );" },
{ "trigger": "display_hint", "contents": "display_hint( ${1:hint} );//maps\\_utility.gsc:"},
{ "trigger": "Distance", "contents": "Distance( ${1:self.origin},${2:}${3:.origin} )" },
{ "trigger": "Distance2D", "contents": "Distance2D( ${1:self.origin},${2:}${3:.origin} )" },
{ "trigger": "DistanceSquared", "contents": "DistanceSquared( ${1:Point 1}, ${2:Point 2} );" },
{ "trigger": "do_player_vo", "contents": "do_player_vo( ${1:snd},${2:variation_coun} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "do_wait", "contents": "do_wait( ${1:count_to_reach} );//maps\\_utility.gsc:"},
{ "trigger": "do_wait_any", "contents": "do_wait_any( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "DoDamage", "contents": "DoDamage( ${1:Health}, ${2:Source Position}, ${3:Attacker}, ${4:Inflictor} );" },
{ "trigger": "DontInterpolate", "contents": "DontInterpolate( ${1} );" },
{ "trigger": "DoSpawn", "contents": "DoSpawn( ${1:Target Name} );" },
{ "trigger": "DrawCompassFriendlies", "contents": "DrawCompassFriendlies( ${1:Draw Compass Friend Lies?} );" },
{ "trigger": "DrawCurve", "contents": "DrawCurve( ${1} );" },
{ "trigger": "DropItem", "contents": "DropItem( ${1:Item Name} );" },
{ "trigger": "DropWeapon", "contents": "DropWeapon( ${1:Weaponfile Name}, ${2:Hand}, ${3:Throw Speed} );" },
{ "trigger": "DumpAnims", "contents": "DumpAnims( ${1} );" },
{ "trigger": "DumpHistory", "contents": "DumpHistory( ${1} );" },
{ "trigger": "Earthquake", "contents": "Earthquake( ${1:Scale}, ${2:Duration}, ${3:Source}, ${4:Radius} );" },
{ "trigger": "enable_trigger", "contents": "enable_trigger( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "enable_trigger_with_noteworthy", "contents": "enable_trigger_with_noteworthy( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "enable_trigger_with_targetname", "contents": "enable_trigger_with_targetname( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "EnableAimAssist", "contents": "EnableAimAssist( ${1} );" },
{ "trigger": "EnableGrenadeTouchDamage", "contents": "EnableGrenadeTouchDamage( ${1} );" },
{ "trigger": "EnableHealthShield", "contents": "EnableHealthShield( ${1:Enable?} );" },
{ "trigger": "EnableInvulnerability", "contents": "EnableInvulnerability( ${1} );" },
{ "trigger": "EnableLinkTo", "contents": "EnableLinkTo();" },
{ "trigger": "EnableOffhandWeapons", "contents": "EnableOffhandWeapons( ${1} );" },
{ "trigger": "EnableTrigger", "contents": "EnableTrigger()" },
{ "trigger": "EnableTurretDismount", "contents": "EnableTurretDismount( ${1} );" },
{ "trigger": "EnableWeaponCycling", "contents": "EnableWeaponCycling( ${1} );" },
{ "trigger": "EnableWeapons", "contents": "EnableWeapons( ${1} );" },
{ "trigger": "EndLocationSelection", "contents": "EndLocationSelection( ${1} );" },
{ "trigger": "endon", "contents": "endon( ${1} );" },
{ "trigger": "endon\tself endon( death )", "contents": "self endon( \"death\" );" },
{ "trigger": "endon\tself endon( disconnect )", "contents": "self endon( \"disconnect\" );" },
{ "trigger": "EndPrediction", "contents": "EndPrediction( ${1} );" },
{ "trigger": "enemy_is_dog", "contents": "enemy_is_dog( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "EnterProne", "contents": "EnterProne( ${1} );" },
{ "trigger": "EntityRadiusDamage", "contents": "EntityRadiusDamage( ${1:Origin}, ${2:Range}, ${3:Maximum Damage}, ${4:Minimum Damage}, ${5:Attacker} );" },
{ "trigger": "EQOff", "contents": "EQOff( ${1} );" },
{ "trigger": "EQOn", "contents": "EQOn( ${1} );" },
{ "trigger": "ExitLevel", "contents": "ExitLevel( ${1:Save Persistent?} );" },
{ "trigger": "ExitProne", "contents": "ExitProne( ${1:Interpolation Time} );" },
{ "trigger": "exploder", "contents": "exploder( ${1:num} );//maps\\_utility.gsc:"},
{ "trigger": "exploder_after_load", "contents": "exploder_after_load( ${1:num} );//maps\\_utility.gsc:"},
{ "trigger": "exploder_before_load", "contents": "exploder_before_load( ${1:num} );//maps\\_utility.gsc:"},
{ "trigger": "exploder_damage", "contents": "exploder_damage( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "FadeOverTime", "contents": "FadeOverTime( ${1:Time} );" },
{ "trigger": "fail_on_friendly_fire", "contents": "fail_on_friendly_fire( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "fake_physicslaunch", "contents": "fake_physicslaunch( ${1:target_pos},${2:power} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "FGetArg", "contents": "FGetArg( ${1:FIle Number}, ${2:Argument Number} );" },
{ "trigger": "FindAnimByname", "contents": "FindAnimByname( ${1} );" },
{ "trigger": "FindBestCoverNode", "contents": "FindBestCoverNode( ${1:Node Meaning}, ${1:Node} );" },
{ "trigger": "FindCoverNode", "contents": "FindCoverNode( ${1} );" },
{ "trigger": "FindReacquireDirectPath", "contents": "FindReacquireDirectPath( ${1:Ignore Suppression?} );" },
{ "trigger": "FindReacquireNode", "contents": "FindReacquireNode( ${1} );" },
{ "trigger": "FindReacquireProximatePath", "contents": "FindReacquireProximatePath( ${1:Ignore Suppression?} );" },
{ "trigger": "FinishPlayerDamage", "contents": "FinishPlayerDamage( ${1:Inflictor}, ${2:Attacker}, ${3:Damage}, ${4:Damage Flags}, ${5:Means Of Death}, ${6:Weapon}, ${7:Direction}, ${8:Hit Location}, ${9:Offset Time} );" },
{ "trigger": "fire_radius", "contents": "fire_radius( ${1:origin},${2:radius} );//maps\\_utility.gsc:"},
{ "trigger": "FireGrenadeLauncher", "contents": "FireGrenadeLauncher( ${1:Barrel Tag} );" },
{ "trigger": "FireWeapon", "contents": "FireWeapon( ${1} );" },
{ "trigger": "flag", "contents": "flag( ${1:message} );//common_scripts\\utility.gsc:"},
{ "trigger": "flag_assert", "contents": "flag_assert( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "flag_clear", "contents": "flag_clear( ${1:message} );//common_scripts\\utility.gsc:"},
{ "trigger": "flag_clear_delayed", "contents": "flag_clear_delayed( ${1:message},${2:delay} );//maps\\_utility.gsc:"},
{ "trigger": "flag_init", "contents": "flag_init( ${1:message} );//common_scripts\\utility.gsc:"},
{ "trigger": "flag_set", "contents": "flag_set( ${1:message} );//common_scripts\\utility.gsc:"},
{ "trigger": "flag_set_delayed", "contents": "flag_set_delayed( ${1:message},${2:delay} );//maps\\_utility.gsc:"},
{ "trigger": "flag_trigger_init", "contents": "flag_trigger_init( ${1:message},${2:trigger},${3:continuous} );//maps\\_utility.gsc:"},
{ "trigger": "flag_triggers_init", "contents": "flag_triggers_init( ${1:message},${2:triggers},${3:all} );//maps\\_utility.gsc:"},
{ "trigger": "flag_wait", "contents": "flag_wait( ${1:msg} );//common_scripts\\utility.gsc:"},
{ "trigger": "flag_wait", "contents": "flag_wait( ${1} );" },
{ "trigger": "flag_wait\t all players connected", "contents": "flag_wait( \"all_players_connected\" );\n" },
{ "trigger": "flag_wait\t electricity on", "contents": "flag_wait( \"electricity_on\" );\n" },
{ "trigger": "flag_wait_all", "contents": "flag_wait_all( ${1:flag1},${2:flag2},${3:flag3},${4:flag4} );//maps\\_utility.gsc:"},
{ "trigger": "flag_wait_any", "contents": "flag_wait_any( ${1:flag1},${2:flag2},${3:flag3},${4:flag4} );//maps\\_utility.gsc:"},
{ "trigger": "flag_wait_either", "contents": "flag_wait_either( ${1:flag1},${2:flag2} );//maps\\_utility.gsc:"},
{ "trigger": "flag_wait_or_timeout", "contents": "flag_wait_or_timeout( ${1:flagname},${2:timer} );//maps\\_utility.gsc:"},
{ "trigger": "flag_waitopen", "contents": "flag_waitopen( ${1:msg} );//common_scripts\\utility.gsc:"},
{ "trigger": "flag_waitopen_or_timeout", "contents": "flag_waitopen_or_timeout( ${1:flagname},${2:timer} );//maps\\_utility.gsc:"},
{ "trigger": "FlagEnemyUnattackable", "contents": "FlagEnemyUnattackable( ${1} );" },
{ "trigger": "for", "contents": "for( ${1} );" },
{ "trigger": "for\tfor loop", "contents": "for( ${2}=0;${2}<${1}.size;${2}++ ){\n\t${1}[${2}] thread ${3}();\n}" },
{ "trigger": "for\tplayers loop", "contents": "for( i=0;i<players.size;i++ ){\n\tplayers[i] thread ${3}();\n}" },
{ "trigger": "ForceTeleport", "contents": "ForceTeleport( ${1} );" },
{ "trigger": "ForceViewmodelAnimation", "contents": "ForceViewmodelAnimation( ${1:Weapon Name}, ${2:Animation Name} );" },
{ "trigger": "FPrintFields", "contents": "FPrintFields( ${1:File Number}, ${2:Output} );" },
{ "trigger": "FPrintLn", "contents": "FPrintLn( ${1:File Number}, ${2:Output} );" },
{ "trigger": "FragButtonPressed", "contents": "FragButtonPressed( ${1} );" },
{ "trigger": "FReadLn", "contents": "FReadLn( ${1:File Number} );" },
{ "trigger": "FreeCurve", "contents": "FreeCurve( ${1} );" },
{ "trigger": "FreeVehicle", "contents": "FreeVehicle( ${1} );" },
{ "trigger": "FreezeControls", "contents": "FreezeControls( ${1:Freeze State?} );" },
{ "trigger": "freezecontrols_all", "contents": "freezecontrols_all( ${1:toggle},${2:delay} );//maps\\_utility.gsc:"},
{ "trigger": "function_stack", "contents": "function_stack( ${1:func},${2:param1},${3:param2},${4:param3},${5:param4} );//maps\\_utility.gsc:"},
{ "trigger": "gather_delay", "contents": "gather_delay( ${1:msg},${2:delay} );//maps\\_utility.gsc:"},
{ "trigger": "gather_delay_proc", "contents": "gather_delay_proc( ${1:msg},${2:delay} );//maps\\_utility.gsc:"},
{ "trigger": "generated_radius_attract_positions", "contents": "generated_radius_attract_positions( ${1:forward},${2:offset},${3:num_positions},${4:attract_radius} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "geo_off", "contents": "geo_off( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "geo_on", "contents": "geo_on( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_ai_group_ai", "contents": "get_ai_group_ai( ${1:aigroup} );//maps\\_utility.gsc:"},
{ "trigger": "get_ai_group_count", "contents": "get_ai_group_count( ${1:aigroup} );//maps\\_utility.gsc:"},
{ "trigger": "get_ai_group_sentient_count", "contents": "get_ai_group_sentient_count( ${1:aigroup} );//maps\\_utility.gsc:"},
{ "trigger": "get_ai_number", "contents": "get_ai_number( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_all_force_color_friendlies", "contents": "get_all_force_color_friendlies( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_array_of_closest", "contents": "get_array_of_closest( ${1:org},${2:array},${3:excluders},${4:max},${5:maxdist} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_2d", "contents": "get_closest_2d( ${1:origin},${2:ents} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_closest_ai", "contents": "get_closest_ai( ${1:org},${2:team} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_ai_exclude", "contents": "get_closest_ai_exclude( ${1:org},${2:team},${3:excluders} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_colored_friendly", "contents": "get_closest_colored_friendly( ${1:color},${2:origin} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_colored_friendly_with_classname", "contents": "get_closest_colored_friendly_with_classname( ${1:color},${2:classname},${3:origin} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_exclude", "contents": "get_closest_exclude( ${1:org},${2:ents},${3:excluders} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_index", "contents": "get_closest_index( ${1:org},${2:array},${3:dist} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_living", "contents": "get_closest_living( ${1:org},${2:array},${3:dist} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_node", "contents": "get_closest_node( ${1:org},${2:nodes} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_closest_non_destroyed_chunk", "contents": "get_closest_non_destroyed_chunk( ${1:origin},${2:barrier_chunks} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_closest_player", "contents": "get_closest_player( ${1:org} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_point", "contents": "get_closest_point( ${1:origin},${2:points},${3:maxDist} );//maps\\_utility.gsc:"},
{ "trigger": "get_closest_valid_player", "contents": "get_closest_valid_player( ${1:origin},${2:ignore_player} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_destroyed_chunks", "contents": "get_destroyed_chunks( ${1:barrier_chunks} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_enemy_count", "contents": "get_enemy_count( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_enemy_team", "contents": "get_enemy_team( ${1:team} );//common_scripts\\utility.gsc:"},
{ "trigger": "get_farthest", "contents": "get_farthest( ${1:org},${2:array} );//maps\\_utility.gsc:"},
{ "trigger": "get_force_color", "contents": "get_force_color( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_force_color_guys", "contents": "get_force_color_guys( ${1:team},${2:color} );//maps\\_utility.gsc:"},
{ "trigger": "get_friendly_chain_node", "contents": "get_friendly_chain_node( ${1:chainstring} );//maps\\_utility.gsc:"},
{ "trigger": "get_guy_with_script_noteworthy_from_spawner", "contents": "get_guy_with_script_noteworthy_from_spawner( ${1:script_noteworthy} );//maps\\_utility.gsc:"},
{ "trigger": "get_guy_with_targetname_from_spawner", "contents": "get_guy_with_targetname_from_spawner( ${1:targetname} );//maps\\_utility.gsc:"},
{ "trigger": "get_guys_with_targetname_from_spawner", "contents": "get_guys_with_targetname_from_spawner( ${1:targetname} );//maps\\_utility.gsc:"},
{ "trigger": "get_heroes", "contents": "get_heroes( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_highest_dot", "contents": "get_highest_dot( ${1:start},${2:end},${3:array} );//maps\\_utility.gsc:"},
{ "trigger": "get_host", "contents": "get_host( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_ignoreme", "contents": "get_ignoreme( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_last_ent_in_chain", "contents": "get_last_ent_in_chain( ${1:sEntityType} );//maps\\_utility.gsc:"},
{ "trigger": "get_linked_ents", "contents": "get_linked_ents( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_linked_structs", "contents": "get_linked_structs( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_links", "contents": "get_links( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_living_ai", "contents": "get_living_ai( ${1:name},${2:type} );//maps\\_utility.gsc:"},
{ "trigger": "get_living_ai_array", "contents": "get_living_ai_array( ${1:name},${2:typ} );//maps\\_utility.gsc:"},
{ "trigger": "get_living_aispecies", "contents": "get_living_aispecies( ${1:name},${2:type},${3:breed} );//maps\\_utility.gsc:"},
{ "trigger": "get_living_aispecies_array", "contents": "get_living_aispecies_array( ${1:name},${2:type},${3:bree} );//maps\\_utility.gsc:"},
{ "trigger": "get_next_from_spectate_list", "contents": "get_next_from_spectate_list( ${1:ent} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_non_destroyed_chunks", "contents": "get_non_destroyed_chunks( ${1:barrier_chunks} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_obj_event", "contents": "get_obj_event( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "get_obj_origin", "contents": "get_obj_origin( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "get_outside_range", "contents": "get_outside_range( ${1:org},${2:array},${3:dist} );//maps\\_utility.gsc:"},
{ "trigger": "get_pacifist", "contents": "get_pacifist( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_player_feet_from_view", "contents": "get_player_feet_from_view( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_player_touching", "contents": "get_player_touching( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "get_players", "contents": "get_players( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_random_destroyed_chunk", "contents": "get_random_destroyed_chunk( ${1:barrier_chunks} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_random_from_spectate_list", "contents": "get_random_from_spectate_list( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_random_non_destroyed_chunk", "contents": "get_random_non_destroyed_chunk( ${1:barrier_chunks} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_random_player", "contents": "get_random_player( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_script_palette", "contents": "get_script_palette( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_stop_watch", "contents": "get_stop_watch( ${1:time},${2:othertime} );//maps\\_utility.gsc:"},
{ "trigger": "get_trigger_flag", "contents": "get_trigger_flag( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_use_key", "contents": "get_use_key( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "get_within_range", "contents": "get_within_range( ${1:org},${2:array},${3:dist} );//maps\\_utility.gsc:"},
{ "trigger": "get_zombie_hint", "contents": "get_zombie_hint( ${1:ref} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "get_zombie_point_of_interest", "contents": "get_zombie_point_of_interest( ${1:origin} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "GetAIArray", "contents": "GetAIArray( ${1:Team}, ${2:Team} );" },
{ "trigger": "getAIarrayTouchingVolume", "contents": "getAIarrayTouchingVolume( ${1:sTeamName},${2:sVolumeName},${3:eVolume} );//maps\\_utility.gsc:"},
{ "trigger": "GetAISpeciesArray", "contents": "GetAISpeciesArray( ${1:Team}, ${2:Species} );" },
{ "trigger": "GetAITriggerFlags", "contents": "GetAITriggerFlags( ${1} );" },
{ "trigger": "GetAllNodes", "contents": "GetAllNodes( ${1} );" },
{ "trigger": "GetAllVehicleNodes", "contents": "GetAllVehicleNodes( ${1} );" },
{ "trigger": "GetAmmoCount", "contents": "GetAmmoCount( ${1} );" },
{ "trigger": "GetAngleDelta", "contents": "GetAngleDelta( ${1:Animation}, ${2:Start Time}, ${3:End Time} );" },
{ "trigger": "GetAnglesToLikelyEnemyPath", "contents": "GetAnglesToLikelyEnemyPath( ${1} );" },
{ "trigger": "getanim", "contents": "getanim( ${1:anime} );//maps\\_utility.gsc:"},
{ "trigger": "getanim_from_animname", "contents": "getanim_from_animname( ${1:anime},${2:animname} );//maps\\_utility.gsc:"},
{ "trigger": "getanim_generic", "contents": "getanim_generic( ${1:anime} );//maps\\_utility.gsc:"},
{ "trigger": "GetAnimAssetType", "contents": "GetAnimAssetType( ${1:Animation} );" },
{ "trigger": "GetAnimCurrFrameCount", "contents": "GetAnimCurrFrameCount( ${1} );" },
{ "trigger": "GetAnimFrameCount", "contents": "GetAnimFrameCount( ${1} );" },
{ "trigger": "GetAnimLength", "contents": "GetAnimLength( ${1:Animation} );" },
{ "trigger": "GetAnimTime", "contents": "GetAnimTime( ${1:Animation} );" },
{ "trigger": "GetArrayKeys", "contents": "GetArrayKeys( ${1:Array} );" },
{ "trigger": "GetAssignedTeam", "contents": "GetAssignedTeam( ${1:Player} );" },
{ "trigger": "GetAtrLoaded", "contents": "GetAtrLoaded( ${1} );" },
{ "trigger": "GetAttachIgnoreCollision", "contents": "GetAttachIgnoreCollision( ${1:Model Index} );" },
{ "trigger": "GetAttachModelName", "contents": "GetAttachModelName( ${1:Model Index} );" },
{ "trigger": "GetAttachPos", "contents": "GetAttachPos( ${1} );" },
{ "trigger": "GetAttachSize", "contents": "GetAttachSize( ${1} );" },
{ "trigger": "GetAttachTagName", "contents": "GetAttachTagName( ${1:Model Index} );" },
{ "trigger": "GetBrushModelCenter", "contents": "GetBrushModelCenter( ${1} );" },
{ "trigger": "GetCentroid", "contents": "GetCentroid( ${1} );" },
{ "trigger": "getchar", "contents": "getchar( ${1:num} );//maps\\_utility.gsc:"},
{ "trigger": "GetClanID", "contents": "GetClanID( ${1} );" },
{ "trigger": "GetClanName", "contents": "GetClanName( ${1} );" },
{ "trigger": "getClientSysState", "contents": "getClientSysState( ${1:sSysNam} );//maps\\_utility.gsc:"},
{ "trigger": "getClosest", "contents": "getClosest( ${1:org},${2:array},${3:dist} );//maps\\_utility.gsc:"},
{ "trigger": "GetClosestEnemySqDist", "contents": "GetClosestEnemySqDist( ${1} );" },
{ "trigger": "getClosestFx", "contents": "getClosestFx( ${1:org},${2:fxarray},${3:dist} );//maps\\_utility.gsc:"},
{ "trigger": "GetCommandFromKey", "contents": "GetCommandFromKey( ${1:Key} );" },
{ "trigger": "GetCoverNode", "contents": "GetCoverNode( ${1} );" },
{ "trigger": "GetCurrentOffhand", "contents": "GetCurrentOffhand( ${1} )${2:;}" },
{ "trigger": "GetCurrentWeapon", "contents": "GetCurrentWeapon()" },
{ "trigger": "GetCurrentWeaponClipAmmo", "contents": "GetCurrentWeaponClipAmmo( ${1} )${2:;}" },
{ "trigger": "GetCurve", "contents": "GetCurve( ${1} );" },
{ "trigger": "GetCurveCurpos", "contents": "GetCurveCurpos( ${1} );" },
{ "trigger": "GetCurveServerpos", "contents": "GetCurveServerpos( ${1} );" },
{ "trigger": "GetCycleOriginOffset", "contents": "GetCycleOriginOffset( ${1:Angles}, ${2:Animation} );" },
{ "trigger": "GetDate", "contents": "GetDate( ${1} );" },
{ "trigger": "GetDebugDvar", "contents": "GetDebugDvar( ${1:Dvar} );" },
{ "trigger": "GetDebugDvarFloat", "contents": "GetDebugDvarFloat( ${1:Dvar} );" },
{ "trigger": "GetDebugDvarInt", "contents": "GetDebugDvarInt( ${1:Dvar} );" },
{ "trigger": "GetDebugEye", "contents": "GetDebugEye( ${1} );" },
{ "trigger": "GetDiffuculty", "contents": "GetDiffuculty( ${1} );" },
{ "trigger": "GetDvar", "contents": "GetDvar( ${1:Dvar} );" },
{ "trigger": "GetDvarFloat", "contents": "GetDvarFloat( ${1:Dvar} );" },
{ "trigger": "GetDvarInt", "contents": "GetDvarInt( ${1:Dvar} );" },
{ "trigger": "GetEnemySqDist", "contents": "GetEnemySqDist( ${1} );" },
{ "trigger": "GetEngineVolume", "contents": "GetEngineVolume( ${1} );" },
{ "trigger": "GetEnt\tscript_noteworthy", "contents": "GetEnt( ${1:name},${2:\"script_noteworthy\"} );" },
{ "trigger": "GetEnt\ttargetname", "contents": "GetEnt( ${1:name},${2:\"targetname\"} );" },
{ "trigger": "GetEntArray\tscript_noteworthy", "contents": "GetEntArray( ${1:name},${2:\"script_noteworthy\"} );" },
{ "trigger": "GetEntArray\ttargetname", "contents": "GetEntArray( ${1:name},${2:\"targetname\"} );" },
{ "trigger": "GetEntByNum", "contents": "GetEntByNum( ${1:Entity Number} );" },
{ "trigger": "GetEntityNumber", "contents": "GetEntityNumber( ${1} );" },
{ "trigger": "GetEntNum", "contents": "GetEntNum( ${1} );" },
{ "trigger": "getExploderId", "contents": "getExploderId( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "GetEye", "contents": "GetEye( ${1} );" },
{ "trigger": "getFarthest", "contents": "getFarthest( ${1:org},${2:array},${3:dist} );//maps\\_utility.gsc:"},
{ "trigger": "GetFixedNodeSafeVolume", "contents": "GetFixedNodeSafeVolume( ${1} );" },
{ "trigger": "GetFlashBangedStrength", "contents": "GetFlashBangedStrength( ${1} );" },
{ "trigger": "GetFractionMaxAmmo", "contents": "GetFractionMaxAmmo( ${1:Weaponfile Name} );" },
{ "trigger": "GetFractionStartAmmo", "contents": "GetFractionStartAmmo( ${1:Weaponfile Name} );" },
{ "trigger": "getfx", "contents": "getfx( ${1:fx} );//maps\\_utility.gsc:"},
{ "trigger": "getfxarraybyID", "contents": "getfxarraybyID( ${1:fxid} );//maps\\_utility.gsc:"},
{ "trigger": "GetFXVisibility", "contents": "GetFXVisibility( ${1:Start}, ${2:End} );" },
{ "trigger": "getGenericAnim", "contents": "getGenericAnim( ${1:anime} );//maps\\_utility.gsc:"},
{ "trigger": "GetGoalSpeedMPH", "contents": "GetGoalSpeedMPH( ${1} );" },
{ "trigger": "GetGoalVolume", "contents": "GetGoalVolume( ${1} );" },
{ "trigger": "GetGroundEntType", "contents": "GetGroundEntType( ${1} );" },
{ "trigger": "GetHitEntType", "contents": "GetHitEntType( ${1} );" },
{ "trigger": "GetHitYaw", "contents": "GetHitYaw( ${1} );" },
{ "trigger": "GetKeyBinding", "contents": "GetKeyBinding( ${1:Key Binding} );" },
{ "trigger": "GetLightColor", "contents": "GetLightColor( ${1} );" },
{ "trigger": "GetLightExponent", "contents": "GetLightExponent( ${1} );" },
{ "trigger": "GetLightFovInner", "contents": "GetLightFovInner( ${1} );" },
{ "trigger": "GetLightFovOuter", "contents": "GetLightFovOuter( ${1} );" },
{ "trigger": "GetLightIntensity", "contents": "GetLightIntensity( ${1} );" },
{ "trigger": "GetLightRadius", "contents": "GetLightRadius( ${1} );" },
{ "trigger": "getlinks_array", "contents": "getlinks_array( ${1:array},${2:linkMap} );//maps\\_utility.gsc:"},
{ "trigger": "GetMapSunDirection", "contents": "GetMapSunDirection( ${1} );" },
{ "trigger": "GetMapSunLight", "contents": "GetMapSunLight( ${1} );" },
{ "trigger": "getmodel", "contents": "getmodel( ${1:str} );//maps\\_utility.gsc:"},
{ "trigger": "GetMotionAngle", "contents": "GetMotionAngle( ${1} );" },
{ "trigger": "GetMoveDelta", "contents": "GetMoveDelta( ${1:Animation}, ${2:Start Time}, ${3:End Time} );" },
{ "trigger": "GetNegotiationEndNode", "contents": "GetNegotiationEndNode( ${1} );" },
{ "trigger": "GetNegotiationStartNode", "contents": "GetNegotiationStartNode( ${1} );" },
{ "trigger": "GetNode", "contents": "GetNode( ${1:Value}, ${2:Key} );" },
{ "trigger": "GetNodeArray", "contents": "GetNodeArray( ${1:Value}, ${2:Key} );" },
{ "trigger": "GetNormalHealth", "contents": "GetNormalHealth( ${1} );" },
{ "trigger": "GetNormalizedMovement", "contents": "GetNormalizedMovement( ${1} );" },
{ "trigger": "GetNorthYaw", "contents": "GetNorthYaw( ${1} );" },
{ "trigger": "GetNotetrackTimes", "contents": "GetNotetrackTimes( ${1:Animation}, ${2:Note Track} );" },
{ "trigger": "GetNumConnectedPlayers", "contents": "GetNumConnectedPlayers( ${1} );" },
{ "trigger": "GetNumExpectedPlayers", "contents": "GetNumExpectedPlayers( ${1} );" },
{ "trigger": "GetNumParts", "contents": "GetNumParts( ${1:XModel Name} );" },
{ "trigger": "GetNumVehicles", "contents": "GetNumVehicles( ${1} );" },
{ "trigger": "GetOffhandSecondaryClass", "contents": "GetOffhandSecondaryClass( ${1} );" },
{ "trigger": "GetOrigin", "contents": "GetOrigin( ${1} );" },
{ "trigger": "GetPartName", "contents": "GetPartName( ${1:XModel Name}, ${2:Index} );" },
{ "trigger": "GetPlayerAngles", "contents": "GetPlayerAngles( ${1} );" },
{ "trigger": "getPlayerC4", "contents": "getPlayerC4( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "getPlayerClaymores", "contents": "getPlayerClaymores( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "GetPlayerViewHeight", "contents": "GetPlayerViewHeight( ${1} );" },
{ "trigger": "GetReacquireNode", "contents": "GetReacquireNode( ${1} );" },
{ "trigger": "GetReflectionLocs", "contents": "GetReflectionLocs( ${1} );" },
{ "trigger": "GetRope", "contents": "GetRope( ${1} );" },
{ "trigger": "GetShootAtPos", "contents": "GetShootAtPos( ${1} );" },
{ "trigger": "GetSnapshotIndexArray", "contents": "GetSnapshotIndexArray( ${1} );" },
{ "trigger": "GetSpawnerArray", "contents": "GetSpawnerArray( ${1} );" },
{ "trigger": "GetSpawnerTeamArray", "contents": "GetSpawnerTeamArray( ${1:Team}, ${2:Team} );" },
{ "trigger": "GetSpeed", "contents": "GetSpeed( ${1} );" },
{ "trigger": "GetSpeedMPH", "contents": "GetSpeedMPH( ${1} );" },
{ "trigger": "GetStance", "contents": "GetStance( ${1} );" },
{ "trigger": "GetStartAngles", "contents": "GetStartAngles( ${1:Origin}, ${2:Angles}, ${3:Animation} );" },
{ "trigger": "GetStartOrigin", "contents": "GetStartOrigin( ${1:Origin}, ${2:Angles}, ${3:Animation} );" },
{ "trigger": "GetStartTime", "contents": "GetStartTime( ${1} );" },
{ "trigger": "GetStat", "contents": "GetStat( ${1} );" },
{ "trigger": "getstruct\tscript_noteworthy", "contents": "getstruct( ${1:name},${2:\"script_noteworthy\"} );//maps\\_utility.gsc:"},
{ "trigger": "getstruct\ttargetname", "contents": "getstruct( ${1:name},${2:\"targetname\"} );//maps\\_utility.gsc:"},
{ "trigger": "getstructarray\tscript_noteworthy", "contents": "getstructarray( ${1:name},${2:\"script_noteworthy\"} );//common_scripts\\utility.gsc:"},
{ "trigger": "getstructarray\ttargetname", "contents": "getstructarray( ${1:name},${2:\"targetname\"} );//common_scripts\\utility.gsc:"},
{ "trigger": "GetSubStr", "contents": "GetSubStr( ${1:String}, ${2:Start Index}, ${3:End Index} );" },
{ "trigger": "GetTagAngles", "contents": "GetTagAngles( ${1:Tag Name} );" },
{ "trigger": "GetTagOrigin", "contents": "GetTagOrigin( ${1:Tag Name} );" },
{ "trigger": "GetTeamPlayersAlive", "contents": "GetTeamPlayersAlive( ${1:Team} );" },
{ "trigger": "GetTeamRadar", "contents": "GetTeamRadar( ${1:Team} );" },
{ "trigger": "GetTeamScore", "contents": "GetTeamScore( ${1:Team} );" },
{ "trigger": "GetThreatBias", "contents": "GetThreatBias( ${1} );" },
{ "trigger": "GetThreatBiasGroup", "contents": "GetThreatBiasGroup( ${1} );" },
{ "trigger": "GetTime", "contents": "GetTime( ${1} );" },
{ "trigger": "GetTimeScale", "contents": "GetTimeScale( ${1} );" },
{ "trigger": "GetTurret", "contents": "GetTurret( ${1} );" },
{ "trigger": "GetTurretOwner", "contents": "GetTurretOwner( ${1} );" },
{ "trigger": "GetTurretTarget", "contents": "GetTurretTarget( ${1} );" },
{ "trigger": "GetVehicleNode", "contents": "GetVehicleNode( ${1:Value}, ${2:Key} );" },
{ "trigger": "GetVehicleNodeArray", "contents": "GetVehicleNodeArray( ${1:Value}, ${2:Key} );" },
{ "trigger": "GetVehicleOwner", "contents": "GetVehicleOwner( ${1} );" },
{ "trigger": "getvehiclespawner", "contents": "getvehiclespawner( ${1:targetname} );//maps\\_utility.gsc:"},
{ "trigger": "getvehiclespawnerarray", "contents": "getvehiclespawnerarray( ${1:targetname} );//maps\\_utility.gsc:"},
{ "trigger": "GetVehOccupants", "contents": "GetVehOccupants( ${1} );" },
{ "trigger": "GetVelocity", "contents": "GetVelocity( ${1} )${2:;}" },
{ "trigger": "GetViewModel", "contents": "GetViewModel( ${1} )${2:;}" },
{ "trigger": "GetWaterHeight", "contents": "GetWaterHeight( ${1} )${2:;}" },
{ "trigger": "GetWeaponAmmoClip", "contents": "GetWeaponAmmoClip( ${1:Weaponfile Name} )${2:;}" },
{ "trigger": "GetWeaponAmmoStock", "contents": "GetWeaponAmmoStock( ${1:Weaponfile Name} )${2:;}" },
{ "trigger": "GetWeaponClipModel", "contents": "GetWeaponClipModel( ${1:weapon} )${2:;}" },
{ "trigger": "GetWeaponModel", "contents": "GetWeaponModel( ${1:weapon name} )${2:;}" },
{ "trigger": "GetWeaponsList", "contents": "GetWeaponsList( ${1} )${2:;}" },
{ "trigger": "GetWeaponsListPrimaries", "contents": "GetWeaponsListPrimaries()${1:;}" },
{ "trigger": "GetWheelSurface", "contents": "GetWheelSurface( ${1} );" },
{ "trigger": "GiveAchievement", "contents": "GiveAchievement( ${1} );" },
{ "trigger": "GiveBackWeaponForLaststand", "contents": "GiveBackWeaponForLaststand( ${1} );" },
{ "trigger": "GiveMaxAmmo", "contents": "GiveMaxAmmo( ${1:Weaponfile Name} );" },
{ "trigger": "GiveStartAmmo", "contents": "GiveStartAmmo( ${1:Weaponfile Name} );" },
{ "trigger": "GiveWeapon", "contents": "GiveWeapon( ${1:Weaponfile Name} );" },
{ "trigger": "groundpos", "contents": "groundpos( ${1:origin} );//maps\\_utility.gsc:"},
{ "trigger": "HasCollectible", "contents": "HasCollectible( ${1} );" },
{ "trigger": "HasEQ", "contents": "HasEQ( ${1} );" },
{ "trigger": "HasPerk", "contents": "HasPerk( ${1:specialty} )" },
{ "trigger": "HasWeapon", "contents": "HasWeapon( ${1:Weaponfile Name} );" },
{ "trigger": "Hide", "contents": "Hide( ${1} );" },
{ "trigger": "hide_all_player_models", "contents": "hide_all_player_models( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "HidePart", "contents": "HidePart( ${1:Tagname}, ${2:Model Name} );" },
{ "trigger": "HideViewModel", "contents": "HideViewModel( ${1} );" },
{ "trigger": "HideWeaponsForLaststand", "contents": "HideWeaponsForLaststand( ${1} );" },
{ "trigger": "hint_create", "contents": "hint_create( ${1:text},${2:background},${3:backgroundAlpha} );//maps\\_utility.gsc:"},
{ "trigger": "hint_Delete", "contents": "hint_Delete( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "hint_position_internal", "contents": "hint_position_internal( ${1:bgAlpha} );//maps\\_utility.gsc:"},
{ "trigger": "hudelem_count\thud", "contents": "hudelem_count( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "hunted_style_door_open", "contents": "hunted_style_door_open( ${1:soundalias} );//maps\\_utility.gsc:"},
{ "trigger": "ignore_me_timer", "contents": "ignore_me_timer( ${1:time} );//maps\\_utility.gsc:"},
{ "trigger": "ignore_triggers", "contents": "ignore_triggers( ${1:timer} );//maps\\_utility.gsc:"},
{ "trigger": "ignoreAllEnemies", "contents": "ignoreAllEnemies( ${1:qTrue} );//maps\\_utility.gsc:"},
{ "trigger": "ignoreEachOther", "contents": "ignoreEachOther( ${1:group1},${2:group2} );//maps\\_utility.gsc:"},
{ "trigger": "in_playable_area", "contents": "in_playable_area( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "in_revive_trigger", "contents": "in_revive_trigger( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "include_powerup", "contents": "include_powerup( ${1:powerup_name} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "include_weapon", "contents": "include_weapon( ${1:weapon_name},${2:in_box},${3:weighting_func} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "init", "contents": "init(){\n\t${1}\n}"},
{ "trigger": "Int", "contents": "Int( ${1:Value} );" },
{ "trigger": "invalidate_attractor_pos", "contents": "invalidate_attractor_pos( ${1:attractor_pos},${2:zombie} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "IPrintLn", "contents": "IPrintLn( ${1:Text} );" },
{ "trigger": "IPrintLnBold", "contents": "IPrintLnBold( ${1:Text} );" },
{ "trigger": "is_float", "contents": "is_float( ${1:num} )//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "is_in_array", "contents": "is_in_array( ${1:aeCollection},${2:eFindee} )//maps\\_utility.gsc:"},
{ "trigger": "is_magic_bullet_shield_enabled", "contents": "is_magic_bullet_shield_enabled( ${1:ent} )//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "is_mature", "contents": "is_mature( ${1} )//common_scripts\\utility.gsc:"},
{ "trigger": "is_player_valid", "contents": "is_player_valid( ${1:player} )//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "isADS", "contents": "isADS( ${1:player} )//maps\\_utility.gsc:"},
{ "trigger": "IsAI", "contents": "IsAI( ${1:Entity} )" },
{ "trigger": "IsAlive", "contents": "IsAlive( ${1:Entity} )" },
{ "trigger": "IsArray", "contents": "IsArray( ${1:Variable} )" },
{ "trigger": "IsBeingWatched", "contents": "IsBeingWatched( ${1} )" },
{ "trigger": "IsDefined", "contents": "IsDefined( ${1:Object} )" },
{ "trigger": "IsDeflected", "contents": "IsDeflected( ${1} )" },
{ "trigger": "IsFiring", "contents": "IsFiring( ${1} )" },
{ "trigger": "IsFiringTurret", "contents": "IsFiringTurret( ${1} )" },
{ "trigger": "isFlashed", "contents": "isFlashed( ${1} )//common_scripts\\utility.gsc:"},
{ "trigger": "IsGodMode", "contents": "IsGodMode( ${1:Entity} );" },
{ "trigger": "IsInGoal", "contents": "IsInGoal( ${1:Point} );" },
{ "trigger": "IsKnownEnemyInRadius", "contents": "IsKnownEnemyInRadius( ${1} )" },
{ "trigger": "IsKnownEnemyInVolume", "contents": "IsKnownEnemyInVolume( ${1} )" },
{ "trigger": "IsLookingAt", "contents": "IsLookingAt( ${1:Entity} )" },
{ "trigger": "IsMantling", "contents": "IsMantling( ${1} )" },
{ "trigger": "IsMeleeing", "contents": "IsMeleeing( ${1} )" },
{ "trigger": "IsMoveSuppressed", "contents": "IsMoveSuppressed( ${1} )" },
{ "trigger": "IsNodeOccupied", "contents": "IsNodeOccupied( ${1:Node} );" },
{ "trigger": "IsOnGround", "contents": "IsOnGround( ${1} )" },
{ "trigger": "IsOnLadder", "contents": "IsOnLadder( ${1} )" },
{ "trigger": "IsPathDirect", "contents": "IsPathDirect( ${1} )" },
{ "trigger": "IsPlayer", "contents": "IsPlayer( ${1:Entity} );" },
{ "trigger": "IsPlayerNumber", "contents": "IsPlayerNumber( ${1:Entity Number} );" },
{ "trigger": "IsRagdoll", "contents": "IsRagdoll( ${1} )" },
{ "trigger": "IsSaveRecentlyLoaded", "contents": "IsSaveRecentlyLoaded( ${1} )" },
{ "trigger": "IsSaveSuccessful", "contents": "IsSaveSuccessful( ${1} )" },
{ "trigger": "IsSentient", "contents": "IsSentient( ${1:Entity} );" },
{ "trigger": "isSpawner", "contents": "isSpawner( ${1} )//maps\\_utility.gsc:"},
{ "trigger": "IsSplitScreen", "contents": "IsSplitScreen( ${1} )" },
{ "trigger": "IsStanceAllowed", "contents": "IsStanceAllowed( ${1:Stance} );" },
{ "trigger": "IsString", "contents": "IsString( ${1:Variable} )" },
{ "trigger": "IsSubStr", "contents": "IsSubStr( ${1:string},${2:subString} )" },
{ "trigger": "issuffix", "contents": "issuffix( ${1:msg},${2:suffix} )//common_scripts\\utility.gsc:"},
{ "trigger": "IsSuppressed", "contents": "IsSuppressed( ${1} )" },
{ "trigger": "IsSuppressionWaiting", "contents": "IsSuppressionWaiting( ${1} )" },
{ "trigger": "IsTalking", "contents": "IsTalking( ${1} )" },
{ "trigger": "IsThrowingGrenade", "contents": "IsThrowingGrenade( ${1} )" },
{ "trigger": "IsTouching", "contents": "IsTouching( ${1:Touched Entity} );" },
{ "trigger": "IsTurretActive", "contents": "IsTurretActive( ${1:Turret} );" },
{ "trigger": "IsTurretFiring", "contents": "IsTurretFiring( ${1} )" },
{ "trigger": "IsTurretReady", "contents": "IsTurretReady( ${1} )" },
{ "trigger": "IsValidGametype", "contents": "IsValidGametype( ${1:Game Type} );" },
{ "trigger": "IsVehicleUsable", "contents": "IsVehicleUsable( ${1} )" },
{ "trigger": "IsWaitingOnSound", "contents": "IsWaitingOnSound( ${1} )" },
{ "trigger": "IsWeaponClipOnly", "contents": "IsWeaponClipOnly( ${1} )" },
{ "trigger": "IsWeaponDetonationtimed", "contents": "IsWeaponDetonationtimed( ${1} )" },
{ "trigger": "ItemWeaponSetAmmo", "contents": "ItemWeaponSetAmmo( ${1} );" },
{ "trigger": "JoltBody", "contents": "JoltBody( ${1} );" },
{ "trigger": "Kick", "contents": "Kick( ${1:Client Number} );" },
{ "trigger": "Knockback", "contents": "Knockback( ${1} );" },
{ "trigger": "LaserOff", "contents": "LaserOff( ${1} );" },
{ "trigger": "LaserOn", "contents": "LaserOn( ${1} );" },
{ "trigger": "Launch", "contents": "Launch( ${1:Initial Velocity} );" },
{ "trigger": "Length", "contents": "Length( ${1:Vector} );" },
{ "trigger": "LengthSquared", "contents": "LengthSquared( ${1:Vector} );" },
{ "trigger": "lerp_dvar_value", "contents": "lerp_dvar_value( ${1:dvar},${2:value},${3:time} );//maps\\_utility.gsc:"},
{ "trigger": "lerp_fov_overtime", "contents": "lerp_fov_overtime( ${1:time},${2:destfov} );//maps\\_utility.gsc:"},
{ "trigger": "lerp_player_view_to_moving_position_oldstyle", "contents": "lerp_player_view_to_moving_position_oldstyle( ${1:ent},${2:tag},${3:lerptime},${4:fraction},${5:right_arc},${6:left_arc},${7:top_arc},${8:bottom_arc},${9:hit_geo} );//maps\\_utility.gsc:"},
{ "trigger": "lerp_player_view_to_position", "contents": "lerp_player_view_to_position( ${1:origin},${2:angles},${3:lerptime},${4:fraction},${5:right_arc},${6:left_arc},${7:top_arc},${8:bottom_arc},${9:hit_geo} );//maps\\_utility.gsc:"},
{ "trigger": "lerp_player_view_to_position_oldstyle", "contents": "lerp_player_view_to_position_oldstyle( ${1:origin},${2:angles},${3:lerptime},${4:fraction},${5:right_arc},${6:left_arc},${7:top_arc},${8:bottom_arc},${9:hit_geo} );//maps\\_utility.gsc:"},
{ "trigger": "lerp_player_view_to_tag", "contents": "lerp_player_view_to_tag( ${1:ent},${2:tag},${3:lerptime},${4:fraction},${5:right_arc},${6:left_arc},${7:top_arc},${8:bottom_arc} );//maps\\_utility.gsc:"},
{ "trigger": "lerp_player_view_to_tag_and_hit_geo", "contents": "lerp_player_view_to_tag_and_hit_geo( ${1:ent},${2:tag},${3:lerptime},${4:fraction},${5:right_arc},${6:left_arc},${7:top_arc},${8:bottom_arc} );//maps\\_utility.gsc:"},
{ "trigger": "lerp_player_view_to_tag_oldstyle", "contents": "lerp_player_view_to_tag_oldstyle( ${1:tag},${2:lerptime},${3:fraction},${4:right_arc},${5:left_arc},${6:top_arc},${7:bottom_arc} );//maps\\_utility.gsc:"},
{ "trigger": "LerpPosition", "contents": "LerpPosition( ${1:Origin}, ${2:Angles} );" },
{ "trigger": "LerpSunDirection", "contents": "LerpSunDirection( ${1:Direction Of Sun Now}, ${2:Direction Of Sun At End}, ${3:Lerp Time} );" },
{ "trigger": "level_end_save", "contents": "level_end_save( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "Line", "contents": "Line( ${1:Start}, ${2:End}, ${3:Color}, ${4:Depth Test}, ${5:Duration} );" },
{ "trigger": "LinkTo", "contents": "LinkTo( ${1LinkTo Entity}, ${2:Tag}, ${3:Origin Offset}, ${4:Angles Offset} );" },
{ "trigger": "LoadedFX", "contents": "LoadedFX( ${1} );" },
{ "trigger": "LoadFX", "contents": "LoadFX( ${1:File Name} );" },
{ "trigger": "LocalToWorldCoords", "contents": "LocalToWorldCoords( ${1:Local Coodinate} );" },
{ "trigger": "LockLightVis", "contents": "LockLightVis( ${1} );" },
{ "trigger": "LogPrint", "contents": "LogPrint( ${1:String} );" },
{ "trigger": "LogString", "contents": "LogString( ${1} );" },
{ "trigger": "lookat", "contents": "lookat( ${1:ent},${2:timer} );//maps\\_utility.gsc:"},
{ "trigger": "loop_fx_sound", "contents": "loop_fx_sound( ${1:alias},${2:origin},${3:ender},${4:timeout} );//maps\\_utility.gsc:"},
{ "trigger": "loop_sound_Delete", "contents": "loop_sound_Delete( ${1:ender},${2:ent} );//maps\\_utility.gsc:"},
{ "trigger": "magic_bullet_death_detection", "contents": "magic_bullet_death_detection( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "magic_bullet_shield", "contents": "magic_bullet_shield( ${1:health},${2:time},${3:oldhealth},${4:maxhealth_modifier},${5:no_death_detection} );//maps\\_utility.gsc:"},
{ "trigger": "MagicBullet", "contents": "MagicBullet( ${1} );" },
{ "trigger": "MagicGrenade", "contents": "MagicGrenade( ${1} );" },
{ "trigger": "MagicGrenadeManual", "contents": "MagicGrenadeManual( ${1} );" },
{ "trigger": "MagicGrenadeType", "contents": "MagicGrenadeType( ${1} );" },
{ "trigger": "make_array", "contents": "make_array( ${1:index1},${2:index2},${3:index3},${4:index4},${5:index5} );//maps\\_utility.gsc:"},
{ "trigger": "MakeCents\tInstructions", "contents": "/*\n#####################\nby: M.A.K.E C E N T S\n#####################\nScript:\nPlace the following\n    maps\\_mc_${1}::init(  );\nunder\n    maps\\_zombiemode::main(  );\nin your nazi_zombie_mapname.gsc\n###############################################################################\n*/"},
{ "trigger": "MakeDvarServerInfo", "contents": "MakeDvarServerInfo( ${1:Dvar Name}, ${2:Dvar Value} );" },
{ "trigger": "MakeFakeAI", "contents": "MakeFakeAI( ${1} );" },
{ "trigger": "makerealai", "contents": "makerealai( ${1:drone} );//maps\\_utility.gsc:"},
{ "trigger": "MakeTurretUnusable", "contents": "MakeTurretUnusable( ${1} );" },
{ "trigger": "MakeTurretUsable", "contents": "MakeTurretUsable( ${1} );" },
{ "trigger": "MakeVehicleUnusable", "contents": "MakeVehicleUnusable( ${1} );" },
{ "trigger": "MakeVehicleUsable", "contents": "MakeVehicleUsable( ${1} );" },
{ "trigger": "manual_linkto", "contents": "manual_linkto( ${1:entity},${2:offset} );//maps\\_utility.gsc:"},
{ "trigger": "Map", "contents": "Map( ${1:Map Name}, ${2:Save Persistent?} );" },
{ "trigger": "Map_Restart", "contents": "Map_Restart( ${1:Save Persistent?} );" },
{ "trigger": "MapExists", "contents": "MapExists( ${1:Map Name} );" },
{ "trigger": "maps\\_zombiemode_score\tadd", "contents": "maps\\_zombiemode_score::add_to_player_score( ${2:points} );" },
{ "trigger": "maps\\_zombiemode_score\tminus", "contents": "maps\\_zombiemode_score::minus_to_player_score( ${2:cost} );" },
{ "trigger": "MayMoveFromPointToPoint", "contents": "MayMoveFromPointToPoint( ${1:Start} ${2:End} );" },
{ "trigger": "MayMoveToPoint", "contents": "MayMoveToPoint( ${1:Position} );" },
{ "trigger": "Melee", "contents": "Melee( ${1} );" },
{ "trigger": "MeleeButtonPressed", "contents": "MeleeButtonPressed( ${1} );" },
{ "trigger": "Missile_CreateAttractorEnt", "contents": "Missile_CreateAttractorEnt( ${1:Entity}, ${2:Strength}, ${3:Maximum Distace} );" },
{ "trigger": "Missile_CreateAttractorOrigin", "contents": "Missile_CreateAttractorOrigin( ${1:Origin}, ${2:Strength}, ${3:Maximum Distace} );" },
{ "trigger": "Missile_CreateRepulsorEnt", "contents": "Missile_CreateRepulsorEnt( ${1:Entity}, ${2:Strength}, ${3:Maximum Distace} );" },
{ "trigger": "Missile_CreateRepulsorOrigin", "contents": "Missile_CreateRepulsorOrigin( ${1:Origin}, ${2:Strength}, ${3:Maximum Distace} );" },
{ "trigger": "Missile_DeleteAttractor", "contents": "Missile_DeleteAttractor( ${1:Attractor} );" },
{ "trigger": "Missile_SetTarget", "contents": "Missile_SetTarget( ${1} );" },
{ "trigger": "MissionFailed", "contents": "MissionFailed( ${1} );" },
{ "trigger": "MissionSuccess", "contents": "MissionSuccess( ${1:Mapname}, ${2:Persistent?} );" },
{ "trigger": "MoveGravity", "contents": "MoveGravity( ${1:Initial Velocity}, ${1:Time} );" },
{ "trigger": "MoveOverTime", "contents": "MoveOverTime( ${1:Time} );" },
{ "trigger": "MoveTo", "contents": "MoveTo( ${1:value},${2:.01}${3:,${4:acceleration time},${5:deceleration time}} );" },
{ "trigger": "MoveX", "contents": "MoveX( ${1:value},${2:.01}${3:,${4:acceleration time},${5:deceleration time}} );" },
{ "trigger": "MoveY", "contents": "MoveY( ${1:value},${2:.01}${3:,${4:acceleration time},${5:deceleration time}} );" },
{ "trigger": "MoveZ", "contents": "MoveZ( ${1:value},${2:.01}${3:,${4:acceleration time},${5:deceleration time}} );" },
{ "trigger": "MusicPlay", "contents": "MusicPlay( ${1:Music}, ${2:Timescale}, ${3:Override Cheat?} );" },
{ "trigger": "MusicStop", "contents": "MusicStop( ${1:Time}, ${2:Time} );" },
{ "trigger": "NearNode", "contents": "NearNode( ${1:Node} );" },
{ "trigger": "NetUpdate", "contents": "NetUpdate( ${1} );" },
{ "trigger": "NewClientHudElem", "contents": "NewClientHudElem( ${1:Client} );" },
{ "trigger": "NewHudElem", "contents": "NewHudElem( ${1} );" },
{ "trigger": "NewHUDElem\tText: Client ( self )", "contents": "${1} = NewClientHudElem(  self  );\n${1}.alignX = \"center\";\n${1}.alignY = \"middle\";\n${1}.horzAlign = \"center\";\n${1}.vertAlign = \"middle\";\n${1}.y = 10;\n${1}.x = 0;\n${1}.foreground = true;\n${1}.fontScale = 3;\n${1}.alpha = 0;\n${1}.color = (  1.0, 1.0, 1.0  );\n${1} SetText( \"This is a text HudElem\" );" },
{ "trigger": "NewHUDElem\tText: Global", "contents": "${1} = NewHudElem();\n${1}.alignX = \"center\";\n${1}.alignY = \"middle\";\n${1}.horzAlign = \"center\";\n${1}.vertAlign = \"middle\";\n${1}.y = 10;\n${1}.x = 0;\n${1}.foreground = true;\n${1}.fontScale = 3;\n${1}.alpha = 0;\n${1}.color = (  1.0, 1.0, 1.0  );\n${1} SetText( \"This is a text HudElem\" );" },
{ "trigger": "NewSquadHUDElem", "contents": "NewSquadHUDElem( ${1} );" },
{ "trigger": "NewTeamHudElem", "contents": "NewTeamHudElem( ${1:Team} );" },
{ "trigger": "NightVisionForceOff", "contents": "NightVisionForceOff( ${1} );" },
{ "trigger": "notify_delay", "contents": "notify_delay( ${1:sNotifyString},${2:fDelay} );//maps\\_utility.gsc:"},
{ "trigger": "notify", "contents": "notify( ${1:sNotifyString} );//maps\\_utility.gsc:"},
{ "trigger": "NotifyOnCommand", "contents": "NotifyOnCommand( ${1:Notify}, ${2:Command} );" },
{ "trigger": "NotSolid", "contents": "NotSolid( ${1} );" },
{ "trigger": "Obituary", "contents": "Obituary( ${1:Victim}, ${2:Attacker}, ${3:Weapon}, ${4:Means Of Death} );" },
{ "trigger": "Obituary_Squad", "contents": "Obituary_Squad( ${1} );" },
{ "trigger": "Objective_Add", "contents": "Objective_Add( ${1:Objective Number}, ${2:State}, ${3:Text}, ${4:Position}, ${5:Icon Shader} );" },
{ "trigger": "Objective_AdditionalCurrent", "contents": "Objective_AdditionalCurrent( ${1:Objective Index}, ${2:Objective Index} );" },
{ "trigger": "Objective_AdditionalPosition", "contents": "Objective_AdditionalPosition( ${1:Objective Index}, ${2:Position Index}, ${3:Position} );" },
{ "trigger": "objective_complete", "contents": "objective_complete( ${1:obj} );//maps\\_utility.gsc:"},
{ "trigger": "Objective_Current", "contents": "Objective_Current( ${1:Objective Index}, ${2:Objective Index} );" },
{ "trigger": "Objective_Delete", "contents": "Objective_Delete( ${1:Objective Number} );" },
{ "trigger": "Objective_Icon", "contents": "Objective_Icon( ${1:Objective Number}, ${2:Icon} );" },
{ "trigger": "objective_is_active", "contents": "objective_is_active( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "objective_is_inactive", "contents": "objective_is_inactive( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "Objective_OnEntity", "contents": "Objective_OnEntity( ${1:Objective Number}, ${2:Entity} );" },
{ "trigger": "Objective_Position", "contents": "Objective_Position( ${1:Objective Number}, ${2:Position} );" },
{ "trigger": "Objective_Ring", "contents": "Objective_Ring( ${1:Objective Index} );" },
{ "trigger": "Objective_Squad", "contents": "Objective_Squad( ${1} );" },
{ "trigger": "Objective_State", "contents": "Objective_State( ${1:Objective Index}, ${2:State} );" },
{ "trigger": "Objective_String", "contents": "Objective_String( ${1:Objective Number}, ${2:String} );" },
{ "trigger": "Objective_String_NoMessage", "contents": "Objective_String_NoMessage( ${1:Objective Number}, ${2:String} );" },
{ "trigger": "Objective_Team", "contents": "Objective_Team( ${1:Objective Number}, ${2:Team} );" },
{ "trigger": "ok_to_spawn", "contents": "ok_to_spawn( ${1:max_wait_seconds} );//maps\\_utility.gsc:"},
{ "trigger": "OkToSpawn", "contents": "OkToSpawn( ${1} );" },
{ "trigger": "onPlayerConnect", "contents": "onPlayerConnect();"},
{ "trigger": "onPlayerConnect\ttwo functions", "contents": "onPlayerConnect(){\n\tfor( ;; ){\n\t\tlevel waittill(  \"connecting\", player  );\n\t\tplayer thread onPlayerSpawned();\n\t}\n}\nonPlayerSpawned(){\n\tself endon(  \"disconnect\"  );\n\tfor( ;; ){\n\t\tself waittill(  \"spawned_player\"  );\n\t\t${1:self thread }${2:function}();\n\t\t${3}\n\t}\n}" },
{ "trigger": "OpenFile", "contents": "OpenFile( ${1:File Number}, ${2:Mode} );" },
{ "trigger": "OpenMenu", "contents": "OpenMenu( ${1:Menu} );" },
{ "trigger": "OpenMenuNoMouse", "contents": "OpenMenuNoMouse( ${1:Menu} );" },
{ "trigger": "OrientMode", "contents": "OrientMode( ${1:Orient Mode}, ${2:Face Angle} | ${3:Direction Vector} | ${4:Face Point});" },
{ "trigger": "palm_style_door_open", "contents": "palm_style_door_open( ${1:soundalias} );//maps\\_utility.gsc:"},
{ "trigger": "pauseEffect", "contents": "pauseEffect( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "PhysicsExplosionCylinder", "contents": "PhysicsExplosionCylinder( ${1:Center}, ${2:Outer Radius}, ${3:Inner Radius}, ${4:Magnitude} );" },
{ "trigger": "PhysicsExplosionSphere", "contents": "PhysicsExplosionSphere( ${1:Position Of Explosion}, ${2:Outer Radius}, ${3:Inner Radius}, ${4:Magnitude} );" },
{ "trigger": "PhysicsJitter", "contents": "PhysicsJitter( ${1:Center}, ${2:Outer Radius}, ${3:Inner Radius}, ${4:Minimum Displacement}, ${5:Maximum Displacement} );" },
{ "trigger": "PhysicsJolt", "contents": "PhysicsJolt( ${1:Center}, ${2:Outer Radius}, ${3:Inner Radius}, ${4:Force} );" },
{ "trigger": "physicsjolt_proximity", "contents": "physicsjolt_proximity( ${1:outer_radius},${2:inner_radius},${3:force} );//maps\\_utility.gsc:"},
{ "trigger": "PhysicsLaunch", "contents": "PhysicsLaunch( ${1:Contact Point}, ${2:Initial Force} );" },
{ "trigger": "PhysicsTrace", "contents": "PhysicsTrace( ${1:Start}, ${2:End} );" },
{ "trigger": "PickUpGrenade", "contents": "PickUpGrenade( ${1} );" },
{ "trigger": "PingPlayer", "contents": "PingPlayer( ${1} );" },
{ "trigger": "places_before_decimal", "contents": "places_before_decimal( ${1:num} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "PlaceSpawnPoint", "contents": "PlaceSpawnPoint( ${1} );" },
{ "trigger": "play_killstreak_dialog", "contents": "play_killstreak_dialog( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "play_loop_sound_on_entity", "contents": "play_loop_sound_on_entity( ${1:alias},${2:offset} );//maps\\_utility.gsc:"},
{ "trigger": "play_loop_sound_on_tag", "contents": "play_loop_sound_on_tag( ${1:alias},${2:tag},${3:bStopSoundOnDeath} );//maps\\_utility.gsc:"},
{ "trigger": "play_loopsound_on_ent", "contents": "play_loopsound_on_ent( ${1:ref} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "play_sound_2D", "contents": "play_sound_2D( ${1:soun} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "play_sound_at_pos", "contents": "play_sound_at_pos( ${1:ref},${2:pos},${3:ent} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "play_sound_in_space", "contents": "play_sound_in_space( ${1:alias},${2:origin},${3:master} );//maps\\_utility.gsc:"},
{ "trigger": "play_sound_on_ent", "contents": "play_sound_on_ent( ${1:ref} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "play_sound_on_entity", "contents": "play_sound_on_entity( ${1:alias} );//maps\\_utility.gsc:"},
{ "trigger": "play_sound_on_tag", "contents": "play_sound_on_tag( ${1:alias},${2:tag},${3:ends_on_death} );//maps\\_utility.gsc:"},
{ "trigger": "play_sound_on_tag_endon_death", "contents": "play_sound_on_tag_endon_death( ${1:alias},${2:tag} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag", "contents": "player_flag( ${1:message} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag_clear", "contents": "player_flag_clear( ${1:message} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag_init", "contents": "player_flag_init( ${1:message},${2:trigger} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag_set", "contents": "player_flag_set( ${1:message} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag_set_delayed", "contents": "player_flag_set_delayed( ${1:message},${2:delay} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag_wait", "contents": "player_flag_wait( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag_wait_either", "contents": "player_flag_wait_either( ${1:flag1},${2:flag2} );//maps\\_utility.gsc:"},
{ "trigger": "player_flag_waitopen", "contents": "player_flag_waitopen( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "player_fudge_moveto", "contents": "player_fudge_moveto( ${1:dest},${2:moverate} );//maps\\_utility.gsc:"},
{ "trigger": "player_is_near_live_grenade", "contents": "player_is_near_live_grenade( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "player_killstreak_timer", "contents": "player_killstreak_timer( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "player_looking_at", "contents": "player_looking_at( ${1:start},${2:dot},${3:dot_only} );//maps\\_utility.gsc:"},
{ "trigger": "Player_SetOffscreenDownMaterial", "contents": "Player_SetOffscreenDownMaterial( ${1} );" },
{ "trigger": "Player_SetOffscreenMaterial", "contents": "Player_SetOffscreenMaterial( ${1} );" },
{ "trigger": "PlayerADS", "contents": "PlayerADS( ${1} );" },
{ "trigger": "Playercmd_GetCurrentArcadeHighscore", "contents": "Playercmd_GetCurrentArcadeHighscore( ${1} );" },
{ "trigger": "playergroundpos", "contents": "playergroundpos( ${1:origi} );//maps\\_utility.gsc:"},
{ "trigger": "PlayerLinkTo", "contents": "PlayerLinkTo( ${1:LinkTo Entity}, ${2:Tag}, ${3:View Percent Tag Fraction}, ${4:Right Arc}, ${5:Left Arc}, ${6:Top Arc}, ${7:Bottom Arc}, ${8:Collide?} );" },
{ "trigger": "PlayerLinkToAbsolute", "contents": "PlayerLinkToAbsolute( ${1LinkTo Entity}, ${2:Tag} );" },
{ "trigger": "PlayerLinkToCamera", "contents": "PlayerLinkToCamera( ${1} );" },
{ "trigger": "PlayerLinkToDelta", "contents": "PlayerLinkToDelta( ${1:LinkTo Entity}, ${2:Tag}, ${3:View Percent Tag Fraction}, ${4:Right Arc}, ${5:Left Arc}, ${6:Top Arc}, ${7:Bottom Arc}, ${8:Use Tag Angles?} );" },
{ "trigger": "PlayerPhysicsTrace", "contents": "PlayerPhysicsTrace( ${1:Start}, ${2:End});" },
{ "trigger": "PlayerPositionValid", "contents": "PlayerPositionValid( ${1} );" },
{ "trigger": "players", "contents": "players = get_players()" },
{ "trigger": "players\tplayers with flag", "contents": "flag_wait( \"all_players_connected\" );\nplayers = get_players(  );\nfor( i=0;i<players.size;i++ ){\n\tplayers[i] thread ${1}(  );\n}" },
{ "trigger": "players\tplayers", "contents": "players = get_players(  );\nfor( i=0;i<players.size;i++ ){\n\tplayers[i] thread ${1}(  );\n}\n" },
{ "trigger": "PlayerSetGroundReferenceEnt", "contents": "PlayerSetGroundReferenceEnt( ${1:Ground Reference Entity} );" },
{ "trigger": "PlayerUnlimitedAmmoThread", "contents": "PlayerUnlimitedAmmoThread( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "PlayFX", "contents": "PlayFX( ${1}, ${2:Position Of Effect}, ${3:Foreward Vector}, ${4:Up Vector} );" },
{ "trigger": "PlayFXOnTag", "contents": "PlayFXOnTag( ${1:Effect ID}, ${2:Entity}, ${3:Tag Name} );" },
{ "trigger": "PlayLocalSound", "contents": "PlayLocalSound( ${1:Sound Name} );" },
{ "trigger": "PlayLoopedFX", "contents": "PlayLoopedFX( ${1:Effect ID}, ${2:Repeat Delay}, ${3:Position}, ${4:Cull Distace}, ${5:Foreward Vector}, ${6:Up Vector} );" },
{ "trigger": "PlayLoopSound", "contents": "PlayLoopSound( ${1:Sound Aliases Name} );" },
{ "trigger": "PlayRumbleLoopOnEntity", "contents": "PlayRumbleLoopOnEntity( ${1:Rumble Name} );" },
{ "trigger": "PlayRumbleLoopOnPosition", "contents": "PlayRumbleLoopOnPosition( ${1:Rumble Name}, ${2:Position} );" },
{ "trigger": "PlayRumbleOnEntity", "contents": "PlayRumbleOnEntity( ${1:Rumble Name} );" },
{ "trigger": "PlayRumbleOnPosition", "contents": "PlayRumbleOnPosition( ${1:Rumble Name}, ${2:Position} );" },
{ "trigger": "PlaySound", "contents": "PlaySound( ${1} );" },
{ "trigger": "PlaySoundAsMaster", "contents": "PlaySoundAsMaster( ${1:Sound Aliases Name}, ${2:Notification String}, ${3:Stoppable Flag} );" },
{ "trigger": "PlaySoundAtPosition", "contents": "PlaySoundAtPosition( ${1} );" },
{ "trigger": "PlaySoundToPlayer", "contents": "PlaySoundToPlayer( ${1:Sound Aliases Name}, ${2:Player} );" },
{ "trigger": "PlaySoundToTeam", "contents": "PlaySoundToTeam( ${1:Sound Aliases Name}, ${2:Team Name}, ${3:Ignore Player} );" },
{ "trigger": "plot_points", "contents": "plot_points( ${1:plotpoints},${2:r},${3:g},${4:b},${5:timer} );//maps\\_utility.gsc:"},
{ "trigger": "PointOnSegmentNearestToPoint", "contents": "PointOnSegmentNearestToPoint( ${1:Segment A}, ${2:Segment B}, ${3:Point} );" },
{ "trigger": "PositionWouldTelefrag", "contents": "PositionWouldTelefrag( ${1:Position} );" },
{ "trigger": "precache", "contents": "precache( ${1:model} );//maps\\_utility.gsc:"},
{ "trigger": "PrecacheHeadIcon", "contents": "PrecacheHeadIcon( \"${1:Head Icon Name}\" );" },
{ "trigger": "PrecacheItem", "contents": "PrecacheItem( \"${1:Item Name}\" );" },
{ "trigger": "PrecacheLocationSelector", "contents": "PrecacheLocationSelector( \"${1:Material Name}\" );" },
{ "trigger": "PrecacheMenu", "contents": "PrecacheMenu( \"${1:Menu Name}\" );" },
{ "trigger": "PrecacheModel", "contents": "PrecacheModel( \"${1:Model Name}\" );" },
{ "trigger": "PrecacheRumble", "contents": "PrecacheRumble( \"${1:Rumble}\" );" },
{ "trigger": "PrecacheShader", "contents": "PrecacheShader( \"${1:Shader Name}\" );" },
{ "trigger": "PrecacheShellShock", "contents": "PrecacheShellShock( \"${1:Shellshock Effect Name}\" );" },
{ "trigger": "PrecacheSpawn", "contents": "PrecacheSpawn( \"${1}\" );" },
{ "trigger": "PrecacheStatusIcon", "contents": "PrecacheStatusIcon( \"${1:Status Icon Name}\" );" },
{ "trigger": "PrecacheString", "contents": "PrecacheString( \"${1:String}\" );" },
{ "trigger": "PrecacheTurret", "contents": "PrecacheTurret( \"${1:Turret Info}\" );" },
{ "trigger": "PrecacheVehicle", "contents": "PrecacheVehicle( \"${1:Vehicle Info}\" );" },
{ "trigger": "PredictAnims", "contents": "PredictAnims( ${1} );" },
{ "trigger": "PredictOriginAndAngles", "contents": "PredictOriginAndAngles( ${1} );" },
{ "trigger": "Print", "contents": "Print( ${1:Text} );" },
{ "trigger": "Print3d", "contents": "Print3d( ${1:Origin}, ${2:Text}, ${3:Color}, ${4:Alpha}, ${5:Scale}, ${6:Duration} );" },
{ "trigger": "print3d_at_pos", "contents": "print3d_at_pos( ${1:msg},${2:pos},${3:thread_endon},${4:offset} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "print_run_speed", "contents": "print_run_speed( ${1:speed} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "PrintLn", "contents": "PrintLn( ${1:Text} );" },
{ "trigger": "PushPlayer", "contents": "PushPlayer( ${1:Can Push Player?} );" },
{ "trigger": "RadiusDamage", "contents": "RadiusDamage( ${1:Origin}, ${2:Range}, ${3:Maximum Damage}, ${4:Minimum Damage}, ${5:Attacker} );" },
{ "trigger": "random", "contents": "random( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "random_tan", "contents": "random_tan( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "RandomFloat", "contents": "RandomFloat( ${1:Maximum} );" },
{ "trigger": "RandomFloatRange", "contents": "RandomFloatRange(  ${1:Minimum}, ${1:Maximum} );" },
{ "trigger": "RandomInt", "contents": "RandomInt( ${1:Maximum} );" },
{ "trigger": "RandomIntRange", "contents": "RandomIntRange( ${1:Minimum}, ${1:Maximum} );" },
{ "trigger": "randomvector", "contents": "randomvector( ${1:nu} );//common_scripts\\utility.gsc:"},
{ "trigger": "ReacquireMove", "contents": "ReacquireMove( ${1} );" },
{ "trigger": "ReacquireStep", "contents": "ReacquireStep( ${1:Temp} );" },
{ "trigger": "really_play_2D_sound", "contents": "really_play_2D_sound( ${1:soun} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "RefreshHUDAmmoCounter", "contents": "RefreshHUDAmmoCounter( ${1} );" },
{ "trigger": "RefreshHUDCompass", "contents": "RefreshHUDCompass( ${1} );" },
{ "trigger": "registerClientSys", "contents": "registerClientSys( ${1:sSysNam} );//maps\\_utility.gsc:"},
{ "trigger": "ReleaseClaimedTrigger", "contents": "ReleaseClaimedTrigger( ${1} );" },
{ "trigger": "remove_all_animnamed_guys_from_array", "contents": "remove_all_animnamed_guys_from_array( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "remove_color_from_array", "contents": "remove_color_from_array( ${1:array},${2:color} );//maps\\_utility.gsc:"},
{ "trigger": "remove_dead_from_array", "contents": "remove_dead_from_array( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "remove_from_spectate_list", "contents": "remove_from_spectate_list( ${1} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "remove_global_spawn_function", "contents": "remove_global_spawn_function( ${1:team},${2:function} );//maps\\_utility.gsc:"},
{ "trigger": "remove_heroes_from_array", "contents": "remove_heroes_from_array( ${1:array} );//maps\\_utility.gsc:"},
{ "trigger": "remove_noteworthy_from_array", "contents": "remove_noteworthy_from_array( ${1:array},${2:noteworthy} );//maps\\_utility.gsc:"},
{ "trigger": "remove_poi_attractor", "contents": "remove_poi_attractor( ${1:zombie_poi} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "remove_undefined_from_array", "contents": "remove_undefined_from_array( ${1:array} );//common_scripts\\utility.gsc:"},
{ "trigger": "remove_without_classname", "contents": "remove_without_classname( ${1:array},${2:classname} );//maps\\_utility.gsc:"},
{ "trigger": "remove_without_model", "contents": "remove_without_model( ${1:array},${2:model} );//maps\\_utility.gsc:"},
{ "trigger": "RemoveAIEventListener", "contents": "RemoveAIEventListener( ${1:Event} );" },
{ "trigger": "RemoveVehicleFromCompass", "contents": "RemoveVehicleFromCompass( ${1} );" },
{ "trigger": "Reset", "contents": "Reset( ${1} );" },
{ "trigger": "ResetCurve", "contents": "ResetCurve( ${1} );" },
{ "trigger": "ResetSpreadOverride", "contents": "ResetSpreadOverride( ${1} );" },
{ "trigger": "ResetSunDirection", "contents": "ResetSunDirection( ${1} );" },
{ "trigger": "ResetSunLight", "contents": "ResetSunLight( ${1} );" },
{ "trigger": "ResetTimeout", "contents": "ResetTimeout( ${1} );" },
{ "trigger": "restartEffect", "contents": "restartEffect( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "RestoreDefaultDropPitch", "contents": "RestoreDefaultDropPitch( ${1} );" },
{ "trigger": "ResumeSpeed", "contents": "ResumeSpeed( ${1} );" },
{ "trigger": "ReturnPlayerControl", "contents": "ReturnPlayerControl( ${1} );" },
{ "trigger": "ReviveEffect", "contents": "ReviveEffect( ${1} );" },
{ "trigger": "RevivePlayer", "contents": "RevivePlayer( ${1} );" },
{ "trigger": "RotatePitch", "contents": "RotatePitch( ${1:Pitch Angle}, ${2:Time}, ${3:Acceleration Time}, ${4:Deceleration Time} );" },
{ "trigger": "RotateRoll", "contents": "RotateRoll( ${1:Roll Angle}, ${2:Time}, ${3:Acceleration Time}, ${4:Deceleration Time} );" },
{ "trigger": "RotateTo", "contents": "RotateTo( ${1:Angles}, ${2:Time}, ${3:Acceleration Time}, ${4:Deceleration Time} );" },
{ "trigger": "RotateVelocity", "contents": "RotateVelocity( ${1:Rotate Velocity}, ${2:Time}, ${3:Acceleration Time}, ${4:Deceleration Time} );" },
{ "trigger": "RotateYaw", "contents": "RotateYaw( ${1:Yaw Angle}, ${2:Time}, ${3:Acceleration Time}, ${4:Deceleration Time} );" },
{ "trigger": "round_up_to_ten", "contents": "round_up_to_ten( ${1:score} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "run_thread_on_noteworthy", "contents": "run_thread_on_noteworthy( ${1:msg},${2:func},${3:param1},${4:param2},${5:param3} );//maps\\_utility.gsc:"},
{ "trigger": "run_thread_on_targetname", "contents": "run_thread_on_targetname( ${1:msg},${2:func},${3:param1},${4:param2},${5:param3} );//maps\\_utility.gsc:"},
{ "trigger": "SaveGame", "contents": "SaveGame( ${1:File Name}, ${2:Description}, ${3:Screenshot}, ${4:Surpass Player Notify?} );" },
{ "trigger": "SaveGameNoCommit", "contents": "SaveGameNoCommit(  ${1:File Name}, ${2:Description}, ${3:Screenshot}, ${4:Surpass Player Notify?} );" },
{ "trigger": "SayAll", "contents": "SayAll( ${1:Message} );" },
{ "trigger": "SayTeam", "contents": "SayTeam( ${1:Message} );" },
{ "trigger": "ScaleOverTime", "contents": "ScaleOverTime( ${1:Time}, ${2:Width}, ${3:Height} );" },
{ "trigger": "scr_println", "contents": "scr_println( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "Scr_TableLookupIString", "contents": "Scr_TableLookupIString( ${1:File Name}, ${2:Search Column Number}, ${3:Search Value}, ${4:Return Value Column Number} );//maps\\_utility.gsc:"},
{ "trigger": "SecondaryOffhandButtonPressed", "contents": "SecondaryOffhandButtonPressed( ${1} );" },
{ "trigger": "self_delete", "contents": "self_delete( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "send_notify", "contents": "send_notify( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "SendLeaderBoards", "contents": "SendLeaderBoards( ${1} );" },
{ "trigger": "SendRanks", "contents": "SendRanks( ${1} );" },
{ "trigger": "set_ai_number", "contents": "set_ai_number( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "set_all_exceptions", "contents": "set_all_exceptions( ${1:exceptionFunc} );//common_scripts\\utility.gsc:"},
{ "trigger": "set_all_players_blur", "contents": "set_all_players_blur( ${1:amount},${2:time} );//maps\\_utility.gsc:"},
{ "trigger": "set_all_players_double_vision", "contents": "set_all_players_double_vision( ${1:amount},${2:time} );//maps\\_utility.gsc:"},
{ "trigger": "set_all_players_shock", "contents": "set_all_players_shock( ${1:shellshock_file},${2:time} );//maps\\_utility.gsc:"},
{ "trigger": "set_all_players_visionset", "contents": "set_all_players_visionset( ${1:vision_file},${2:time} );//maps\\_utility.gsc:"},
{ "trigger": "set_allowdeath", "contents": "set_allowdeath( ${1:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_ambient", "contents": "set_ambient( ${1:track} );//maps\\_utility.gsc:"},
{ "trigger": "set_ambient_alias", "contents": "set_ambient_alias( ${1:ambient},${2:alias} );//maps\\_utility.gsc:"},
{ "trigger": "set_baseaccuracy", "contents": "set_baseaccuracy( ${1:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_battlechatter", "contents": "set_battlechatter( ${1:state} );//maps\\_utility.gsc:"},
{ "trigger": "set_blur", "contents": "set_blur( ${1:magnitude},${2:time} );//maps\\_utility.gsc:"},
{ "trigger": "set_breadcrumbs", "contents": "set_breadcrumbs( ${1:start} );//maps\\_utility.gsc:"},
{ "trigger": "set_breadcrumbs_player_positions", "contents": "set_breadcrumbs_player_positions( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "set_console_status", "contents": "set_console_status( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "set_deathanim", "contents": "set_deathanim( ${1:deathanim} );//maps\\_utility.gsc:"},
{ "trigger": "set_default_pathenemy_settings", "contents": "set_default_pathenemy_settings( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "set_empty_promotion_order", "contents": "set_empty_promotion_order( ${1:deadguy} );//maps\\_utility.gsc:"},
{ "trigger": "set_environment", "contents": "set_environment( ${1:env} );//maps\\_utility.gsc:"},
{ "trigger": "set_exception", "contents": "set_exception( ${1:type},${2:func} );//common_scripts\\utility.gsc:"},
{ "trigger": "set_fixednode_false", "contents": "set_fixednode_false( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "set_fixednode_true", "contents": "set_fixednode_true( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "set_flag_on_targetname_trigger", "contents": "set_flag_on_targetname_trigger( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "set_flag_on_trigger", "contents": "set_flag_on_trigger( ${1:eTrigger},${2:strFlag} );//maps\\_utility.gsc:"},
{ "trigger": "set_flash_duration", "contents": "set_flash_duration( ${1:time_in_second} );//common_scripts\\utility.gsc:"},
{ "trigger": "set_force_color", "contents": "set_force_color( ${1:_color} );//maps\\_utility.gsc:"},
{ "trigger": "set_force_color_spawner", "contents": "set_force_color_spawner( ${1:color} );//maps\\_utility.gsc:"},
{ "trigger": "set_force_cover", "contents": "set_force_cover( ${1:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_forcegoal", "contents": "set_forcegoal( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "set_friendly_chain_wrapper", "contents": "set_friendly_chain_wrapper( ${1:node} );//maps\\_utility.gsc:"},
{ "trigger": "set_generic_deathanim", "contents": "set_generic_deathanim( ${1:deathanim} );//maps\\_utility.gsc:"},
{ "trigger": "set_generic_run_anim", "contents": "set_generic_run_anim( ${1:anime},${2:alwaysRunForward} );//maps\\_utility.gsc:"},
{ "trigger": "set_goal_ent", "contents": "set_goal_ent( ${1:target} );//maps\\_utility.gsc:"},
{ "trigger": "set_goal_entity", "contents": "set_goal_entity( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "set_goal_node", "contents": "set_goal_node( ${1:node} );//maps\\_utility.gsc:"},
{ "trigger": "set_goal_pos", "contents": "set_goal_pos( ${1:origin} );//maps\\_utility.gsc:"},
{ "trigger": "set_goalradius", "contents": "set_goalradius( ${1:radius} );//maps\\_utility.gsc:"},
{ "trigger": "set_grenadeammo", "contents": "set_grenadeammo( ${1:count} );//maps\\_utility.gsc:"},
{ "trigger": "set_hint_string", "contents": "set_hint_string( ${1:ent},${2:default_ref} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "set_ignoreall", "contents": "set_ignoreall( ${1:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_ignoreme", "contents": "set_ignoreme( ${1:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_ignoreSuppression", "contents": "set_ignoreSuppression( ${1:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_nvg_vision", "contents": "set_nvg_vision( ${1:visionset},${2:transition_time} );//maps\\_utility.gsc:"},
{ "trigger": "set_objective_active", "contents": "set_objective_active( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "set_objective_inactive", "contents": "set_objective_inactive( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "set_pacifist", "contents": "set_pacifist( ${1:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_player_spawnpoints", "contents": "set_player_spawnpoints( ${1:spawnpoints} );//maps\\_utility.gsc:"},
{ "trigger": "set_promotion_order", "contents": "set_promotion_order( ${1:deadguy},${2:replacer} );//maps\\_utility.gsc:"},
{ "trigger": "set_run_anim", "contents": "set_run_anim( ${1:anime},${2:alwaysRunForward} );//maps\\_utility.gsc:"},
{ "trigger": "set_splitscreen_fog", "contents": "set_splitscreen_fog( ${1:start_dist},${2:halfway_dist},${3:halfway_height},${4:base_height},${5:red},${6:green},${7:blue},${8:trans_time},${9:cull_dist} );//maps\\_utility.gsc:"},
{ "trigger": "set_team_pacifist", "contents": "set_team_pacifist( ${1:team},${2:val} );//maps\\_utility.gsc:"},
{ "trigger": "set_trigger_flag_permissions", "contents": "set_trigger_flag_permissions( ${1:msg} );//common_scripts\\utility.gsc:"},
{ "trigger": "set_vision_set", "contents": "set_vision_set( ${1:visionset},${2:transition_time} );//maps\\_utility.gsc:"},
{ "trigger": "set_zombie_var", "contents": "set_zombie_var( ${1:var},${2:value},${3:div},${4:is_float} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "SetAcceleration", "contents": "SetAcceleration( ${1} );" },
{ "trigger": "SetActionSlot", "contents": "SetActionSlot( ${1:Slot #}, ${2:Option Name}, ${3:Extra Parameter} );" },
{ "trigger": "SetAimAnims", "contents": "SetAimAnims( ${1:Aim Low}, ${2:Aim Level}, ${3:Aim High}, ${4:Shoot Low}, ${5:Shoot Level}, ${6:Shoot High} );" },
{ "trigger": "SetAirResistance", "contents": "SetAirResistance( ${1} );" },
{ "trigger": "SetAISpread", "contents": "SetAISpread( ${1:Spread} );" },
{ "trigger": "SetAnim", "contents": "SetAnim( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimKnob", "contents": "SetAnimKnob( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimKnobAll", "contents": "SetAnimKnobAll( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimKnobAllLimited", "contents": "SetAnimKnobAllLimited( ${1:Animation}, ${2:Root}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetAnimKnobAllLimitedRestart", "contents": "SetAnimKnobAllLimitedRestart( ${1:Animation}, ${2:Root}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetAnimKnobAllRestart", "contents": "SetAnimKnobAllRestart( ${1:Animation}, ${2:Root}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetAnimKnobLimited", "contents": "SetAnimKnobLimited( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimKnobLimitedRestart", "contents": "SetAnimKnobLimitedRestart( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimKnobRestart", "contents": "SetAnimKnobRestart( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimLimited", "contents": "SetAnimLimited( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimLimitedRestart", "contents": "SetAnimLimitedRestart( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimRestart", "contents": "SetAnimRestart( ${1:Animation}, ${2:Weight}, ${3:Time}, ${4:Rate} );" },
{ "trigger": "SetAnimState", "contents": "SetAnimState( ${1} );" },
{ "trigger": "SetAnimTime", "contents": "SetAnimTime( ${1} );" },
{ "trigger": "SetArchive", "contents": "SetArchive( ${1:Archive} );" },
{ "trigger": "SetAutoPickup", "contents": "SetAutoPickup( ${1:Auto Pickup?} );" },
{ "trigger": "SetBlur", "contents": "SetBlur( ${1:Target Blur}, ${2:Time} );" },
{ "trigger": "SetBottomArc", "contents": "SetBottomArc( ${1:Angle} );" },
{ "trigger": "SetBurn", "contents": "SetBurn( ${1} );" },
{ "trigger": "SetCanDamage", "contents": "SetCanDamage( ${1:Can Damage?} );" },
{ "trigger": "SetChannelVolumes", "contents": "SetChannelVolumes( ${1:Priority}, ${2:Shock Name}, ${3:Fade Time} );" },
{ "trigger": "SetClientDvar", "contents": "SetClientDvar( ${1:Dvar Name}, ${2:Value} );" },
{ "trigger": "SetClientDvars", "contents": "SetClientDvars( ${1:Dvar Name}, ${2:Value}, ${3:Dvar Name}, ${4:Value} );" },
{ "trigger": "SetClientNameMode", "contents": "SetClientNameMode( ${1:Name Mode} );" },
{ "trigger": "setClientSysState", "contents": "setClientSysState( ${1:sSysName},${2:sSysState},${3:playe} );//maps\\_utility.gsc:"},
{ "trigger": "SetClock", "contents": "SetClock( ${1:Time}, ${2:Full Time}, ${3:Material}, ${4:Height}, ${5:Width} );" },
{ "trigger": "SetClockUp", "contents": "SetClockUp( ${1:Time}, ${2:Full Time}, ${3:Material}, ${4:Height}, ${5:Width} );" },
{ "trigger": "SetCollectible", "contents": "SetCollectible( ${1} );" },
{ "trigger": "SetContents", "contents": "SetContents( ${1:Contents} );" },
{ "trigger": "SetConvergenceTime", "contents": "SetConvergenceTime( ${1:Convergence Time}, ${2:Type} );" },
{ "trigger": "SetCullDist", "contents": "SetCullDist( ${1:Cull Distace} );" },
{ "trigger": "SetCursorHint\tHINT_ACTIVATE", "contents": "SetCursorHint( ${1:\"HINT_ACTIVATE\"} );" },
{ "trigger": "SetCursorHint\tHINT_FRIENDLY", "contents": "SetCursorHint( ${1:\"HINT_FRIENDLY\"} );" },
{ "trigger": "SetCursorHint\tHINT_HEALTH", "contents": "SetCursorHint( ${1:\"HINT_HEALTH\"} );" },
{ "trigger": "SetCursorHint\tHINT_NOICON", "contents": "SetCursorHint( ${1:\"HINT_NOICON\"} );" },
{ "trigger": "SetCursorHint\tHINT_NONE", "contents": "SetCursorHint( ${1:\"HINT_NONE\"} );" },
{ "trigger": "SetCurveCameraEnt", "contents": "SetCurveCameraEnt( ${1} );" },
{ "trigger": "SetCurveNotifyEnt", "contents": "SetCurveNotifyEnt( ${1} );" },
{ "trigger": "SetCurveRounded", "contents": "SetCurveRounded( ${1} );" },
{ "trigger": "SetCurveSmooth", "contents": "SetCurveSmooth( ${1} );" },
{ "trigger": "SetCurveSpeed", "contents": "SetCurveSpeed( ${1} );" },
{ "trigger": "SetDebugAngles", "contents": "SetDebugAngles( ${1:Angles} );" },
{ "trigger": "SetDebugOrigin", "contents": "SetDebugOrigin( ${1:Origin} );" },
{ "trigger": "SetDeceleration", "contents": "SetDeceleration( ${1} );" },
{ "trigger": "SetDefaultDropPitch", "contents": "SetDefaultDropPitch( ${1:Pitch}, ${2:Yaw} );" },
{ "trigger": "SetDepthOfField", "contents": "SetDepthOfField( ${1:Near Start}, ${2:Near End}, ${3:Far Start}, ${4:Far End}, ${5:Near Blur}, ${6:Far Blur} );" },
{ "trigger": "SetDvar", "contents": "SetDvar( ${1:Dvar} );" },
{ "trigger": "SetEngagementMaxDist", "contents": "SetEngagementMaxDist( ${1:Maximum Dostance}, ${2:Maximum Falloff Distace} );" },
{ "trigger": "SetEngagementMinDist", "contents": "SetEngagementMinDist( ${1:Minimum Dostance}, ${2:Minimum Falloff Distace} );" },
{ "trigger": "SetEngineVolume", "contents": "SetEngineVolume( ${1} );" },
{ "trigger": "SetEntityTarget", "contents": "SetEntityTarget( ${1:Entity} ${2:Threat} );" },
{ "trigger": "SetEq", "contents": "SetEq( ${1:Channel}, ${2:EQ Index}, ${3:Band}, ${4:Filter Type}, ${5:Gain}, ${6:Frequency}, ${7:Quality Factor} );" },
{ "trigger": "SetEqLerp", "contents": "SetEqLerp( ${1:EQ Lerp}  ${2:EQ Lerp Index} );" },
{ "trigger": "SetExpFog", "contents": "SetExpFog( ${1:Start Distace}, ${2:Start Distace}, ${3:Halfway Distace}, ${4:Red}, ${5:Green}, ${6:Blue}, ${7:Transition Time} );" },
{ "trigger": "SetFakeEntOrg", "contents": "SetFakeEntOrg( ${1} );" },
{ "trigger": "SetFixedNodeSafeVolume", "contents": "SetFixedNodeSafeVolume( ${1Volume Entity} );" },
{ "trigger": "SetFlaggedAnim", "contents": "SetFlaggedAnim( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlaggedAnimKnob", "contents": "SetFlaggedAnimKnob( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlaggedAnimKnobAll", "contents": "SetFlaggedAnimKnobAll( ${1:Notify Name}, ${2:Animation}, ${3:Root}, ${4:Weight}, ${5:Time}, ${6:Rate} );" },
{ "trigger": "SetFlaggedAnimKnobAllRestart", "contents": "SetFlaggedAnimKnobAllRestart( ${1:Notify Name}, ${2:Animation}, ${3:Root}, ${4:Weight}, ${5:Time}, ${6:Rate} );" },
{ "trigger": "SetFlaggedAnimKnobLimited", "contents": "SetFlaggedAnimKnobLimited( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlaggedAnimKnobLimitedRestart", "contents": "SetFlaggedAnimKnobLimitedRestart( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlaggedAnimKnobRestart", "contents": "SetFlaggedAnimKnobRestart( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlaggedAnimLimited", "contents": "SetFlaggedAnimLimited( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlaggedAnimLimitedRestart", "contents": "SetFlaggedAnimLimitedRestart( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlaggedAnimRestart", "contents": "SetFlaggedAnimRestart( ${1:Notify Name}, ${2:Animation}, ${3:Weight}, ${4:Time}, ${5:Rate} );" },
{ "trigger": "SetFlashBanged", "contents": "SetFlashBanged( ${1:Flashed?}, ${2:Strength} );" },
{ "trigger": "SetFlashbangImmunity", "contents": "SetFlashbangImmunity( ${1:Immune?} );" },
{ "trigger": "SetFriendlyChain", "contents": "SetFriendlyChain( ${1:Node} );" },
{ "trigger": "SetGameEndTime", "contents": "SetGameEndTime( ${1} );" },
{ "trigger": "SetGameTypeString", "contents": "SetGameTypeString( ${1:Game Type} );" },
{ "trigger": "SetGoalEntity", "contents": "SetGoalEntity( ${1:Goal Entity} );" },
{ "trigger": "SetGoalNode", "contents": "SetGoalNode( ${1:Goal Node} );" },
{ "trigger": "SetGoalPos", "contents": "SetGoalPos( ${1:Position} );" },
{ "trigger": "SetGoalVolume", "contents": "SetGoalVolume( ${1:Volume Entity} );" },
{ "trigger": "SetGoalYaw", "contents": "SetGoalYaw( ${1} );" },
{ "trigger": "SetGunnerTargetEnt", "contents": "SetGunnerTargetEnt( ${1} );" },
{ "trigger": "SetGunnerTargetVec", "contents": "SetGunnerTargetVec( ${1} );" },
{ "trigger": "SetHintString", "contents": "SetHintString( ${1:String} );" },
{ "trigger": "SetHoverParams", "contents": "SetHoverParams( ${1} );" },
{ "trigger": "SetIgnoreMeGroup", "contents": "SetIgnoreMeGroup( ${1} );" },
{ "trigger": "SetJitterParams", "contents": "SetJitterParams( ${1} );" },
{ "trigger": "SetLeftArc", "contents": "SetLeftArc( ${1:Angle} );" },
{ "trigger": "SetLightColor", "contents": "SetLightColor( ${1:Color} );" },
{ "trigger": "SetLightExponent", "contents": "SetLightExponent( ${1:Exponent} );" },
{ "trigger": "SetLightFovRange", "contents": "SetLightFovRange( ${1:Fov Outer}, ${2:Fov Inner} );" },
{ "trigger": "SetLightIntensity", "contents": "SetLightIntensity( ${1:Intensity} );" },
{ "trigger": "SetLightRadius", "contents": "SetLightRadius( ${1:Radius} );" },
{ "trigger": "SetLookAt", "contents": "SetLookAt( ${1:Position}, ${2:Turn Acceleration} );" },
{ "trigger": "SetLookAtAnimNodes", "contents": "SetLookAtAnimNodes( ${1:Look Straight Animation}, ${2:Look Left Animation}, ${3:Look Right Animation} );" },
{ "trigger": "SetLookAtCurve", "contents": "SetLookAtCurve( ${1} );" },
{ "trigger": "SetLookAtDirection", "contents": "SetLookAtDirection( ${1} );" },
{ "trigger": "SetLookAtEnt", "contents": "SetLookAtEnt( ${1} );" },
{ "trigger": "SetLookAtEntity", "contents": "SetLookAtEntity( ${1} );" },
{ "trigger": "SetLookAtOrigin", "contents": "SetLookAtOrigin( ${1} );" },
{ "trigger": "SetLookAtText", "contents": "SetLookAtText( ${1:Lookat Text Line 1}, ${2:Lookat Text Line 2} );" },
{ "trigger": "SetLookAtYawLimits", "contents": "SetLookAtYawLimits( ${1:Look Animation Yaw Maximum}, ${2:Look Animation Yaw Limit}, ${3:Blend Time} );" },
{ "trigger": "SetMapCenter", "contents": "SetMapCenter( ${1} );" },
{ "trigger": "SetMapNameString", "contents": "SetMapNameString( ${1:Map Name} );" },
{ "trigger": "SetMaxPitchRoll", "contents": "SetMaxPitchRoll( ${1} );" },
{ "trigger": "SetMiniMap", "contents": "SetMiniMap( ${1:Material Name} ${2:Upper Left X} ${3:Upper Left Y} ${4:Lower Right X} ${5:Lower Right Y} );" },
{ "trigger": "SetMissionDvar", "contents": "SetMissionDvar( ${1} );" },
{ "trigger": "SetMode", "contents": "SetMode( ${1:Mode} );" },
{ "trigger": "SetModel", "contents": "SetModel( ${1:Model Name} );" },
{ "trigger": "SetMoveSpeedScale", "contents": "SetMoveSpeedScale( ${1:Scale} );" },
{ "trigger": "SetNearGoalNotifyDist", "contents": "SetNearGoalNotifyDist( ${1} );" },
{ "trigger": "SetNodePriority", "contents": "SetNodePriority( ${1:Node}, ${2:Enable?} );" },
{ "trigger": "SetNormalHealth", "contents": "SetNormalHealth( ${1:Health} );" },
{ "trigger": "SetOffhandSecondaryClass", "contents": "SetOffhandSecondaryClass( ${1:Name} );" },
{ "trigger": "SetOrigin", "contents": "SetOrigin( ${1:Player Origin} );" },
{ "trigger": "SetPerk", "contents": "SetPerk( ${1:Perk Name} );" },
{ "trigger": "SetPhysicsGravityDir", "contents": "SetPhysicsGravityDir( ${1:Direction} );" },
{ "trigger": "SetPlanegoalPos", "contents": "SetPlanegoalPos( ${1} );" },
{ "trigger": "SetPlaneGoalRoll", "contents": "SetPlaneGoalRoll( ${1} );" },
{ "trigger": "SetPlayerAngles", "contents": "SetPlayerAngles( ${1:Player Angles} );" },
{ "trigger": "SetPlayerIgnoreRadiusDamage", "contents": "SetPlayerIgnoreRadiusDamage( ${1:Player Ignores Radius Damage?} );" },
{ "trigger": "SetPlayerNameString", "contents": "SetPlayerNameString( ${1:Player Name} );" },
{ "trigger": "SetPlayerSpread", "contents": "SetPlayerSpread( ${1:Spread} );" },
{ "trigger": "SetPlayerTeamRank", "contents": "SetPlayerTeamRank( ${1} );" },
{ "trigger": "SetPotentialThreat", "contents": "SetPotentialThreat( ${1:Direction} );" },
{ "trigger": "SetPrintChannel", "contents": "SetPrintChannel( ${1:Channel} );" },
{ "trigger": "SetProneAnimNodes", "contents": "SetProneAnimNodes( ${1:Down Angle}, ${2:Up Angle}, ${3:Low Prone Animation}, ${4:Straight Prone Animation}, ${5:High Prone Animation} );" },
{ "trigger": "SetPulseFX", "contents": "SetPulseFX( ${1:Speed}, ${2:Decay Start}, ${3:Decay Duration} );" },
{ "trigger": "SetRank", "contents": "SetRank( ${1:Rank ID}, ${2:Prestige Level} );" },
{ "trigger": "SetReverb", "contents": "SetReverb( ${1:Priority}, ${2:Room Type}, ${3:Dry Level}, ${4:Wet Level}, ${5:Fade Time} );" },
{ "trigger": "SetRightArc", "contents": "SetRightArc( ${1:Angle} );" },
{ "trigger": "SetRunToPos", "contents": "SetRunToPos( ${1:Position} );" },
{ "trigger": "SetSavedDvar", "contents": "SetSavedDvar( ${1:Dvar} );" },
{ "trigger": "SetShader", "contents": "SetShader( ${1:Material Name}, ${2:Width}, ${3:Height} );" },
{ "trigger": "SetShadowHint", "contents": "SetShadowHint( ${1:Priority} );" },
{ "trigger": "SetSoundBlend", "contents": "SetSoundBlend( ${1:Sound 1}, ${2:Sound 2}, ${3:Mix} );" },
{ "trigger": "SetSpawnerTeam", "contents": "SetSpawnerTeam( ${1:Team} );" },
{ "trigger": "SetSpawnWeapon", "contents": "SetSpawnWeapon( ${1:Weaponfile Name} );" },
{ "trigger": "SetSpeed", "contents": "SetSpeed( ${1} );" },
{ "trigger": "SetSpeedImmediate", "contents": "SetSpeedImmediate( ${1} );" },
{ "trigger": "SetSpreadOverride", "contents": "SetSpreadOverride( ${1:Player Spread} );" },
{ "trigger": "SetStableMissile", "contents": "SetStableMissile( ${1:Stable Missile Flag} );" },
{ "trigger": "SetStance", "contents": "SetStance( ${1} );" },
{ "trigger": "SetStat", "contents": "SetStat( ${1} );" },
{ "trigger": "SetSunDirection", "contents": "SetSunDirection( ${1:Direction To Sun} );" },
{ "trigger": "SetSunLight", "contents": "SetSunLight( ${1:Red}, ${2:Green}, ${3:Blue} );" },
{ "trigger": "SetSuppressionTime", "contents": "SetSuppressionTime( ${1:Suppression Time} );" },
{ "trigger": "SetSwitchNode", "contents": "SetSwitchNode( ${1} );" },
{ "trigger": "SetTalkToSpecies", "contents": "SetTalkToSpecies( ${1:Species} );" },
{ "trigger": "SetTargetEnt", "contents": "SetTargetEnt( ${1:Entity} );" },
{ "trigger": "SetTargetEntity", "contents": "SetTargetEntity( ${1:Target} );" },
{ "trigger": "SetTargetYaw", "contents": "SetTargetYaw( ${1} );" },
{ "trigger": "SetTeamForTrigger", "contents": "SetTeamForTrigger( ${1:Team Name} );" },
{ "trigger": "SetTeamRadar", "contents": "SetTeamRadar( ${1:Team}, ${2:Availability} );" },
{ "trigger": "SetTeamScore", "contents": "SetTeamScore( ${1:Team},${2:Score} );" },
{ "trigger": "SetTenthsTimer", "contents": "SetTenthsTimer( ${1:Time} );" },
{ "trigger": "SetTenthsTimerUp", "contents": "SetTenthsTimerUp( ${1:Time} );" },
{ "trigger": "SetText", "contents": "SetText( ${1:Text} );" },
{ "trigger": "SetThreatBias", "contents": "SetThreatBias( ${1} );" },
{ "trigger": "SetThreatBiasAgainstAll", "contents": "SetThreatBiasAgainstAll( ${1} );" },
{ "trigger": "SetThreatBiasGroup", "contents": "SetThreatBiasGroup( ${1} );" },
{ "trigger": "SetTimer", "contents": "SetTimer( ${1} );" },
{ "trigger": "SetTimerUp", "contents": "SetTimerUp( ${1:Time} );" },
{ "trigger": "SetTimeScale", "contents": "SetTimeScale( ${1} );" },
{ "trigger": "SetTopArc", "contents": "SetTopArc( ${1:Angle} );" },
{ "trigger": "SetTurningAbility", "contents": "SetTurningAbility( ${1} );" },
{ "trigger": "SetTurretAnim", "contents": "SetTurretAnim( ${1:Turret Animation} );" },
{ "trigger": "SetTurretIgnoreGoals", "contents": "SetTurretIgnoreGoals( ${1:Ignore Goals} );" },
{ "trigger": "SetTurretNode", "contents": "SetTurretNode( ${1:Node}, {2:Turret} );" },
{ "trigger": "SetTurretTargetEnt", "contents": "SetTurretTargetEnt( ${1} );" },
{ "trigger": "SetTurretTargetVec", "contents": "SetTurretTargetVec( ${1} );" },
{ "trigger": "SetTurretTeam", "contents": "SetTurretTeam( ${1:Team} );" },
{ "trigger": "SetUINextLevel", "contents": "SetUINextLevel( ${1} );" },
{ "trigger": "setup_response_line", "contents": "setup_response_line( ${1:player},${2:index},${3:response} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "setup_response_waittime", "contents": "setup_response_waittime( ${1:sound_to_play} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "setup_rival_hero", "contents": "setup_rival_hero( ${1:player},${2:hero},${3:rival},${4:response} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "SetValue", "contents": "SetValue( ${1:Value} );" },
{ "trigger": "SetVehGoalPos", "contents": "SetVehGoalPos( ${1} );" },
{ "trigger": "SetVehicleLookAtText", "contents": "SetVehicleLookAtText( ${1} );" },
{ "trigger": "SetVehicleTeam", "contents": "SetVehicleTeam( ${1} );" },
{ "trigger": "SetVehMaxSpeed", "contents": "SetVehMaxSpeed( ${1} );" },
{ "trigger": "SetVehWeapon", "contents": "SetVehWeapon( ${1} );" },
{ "trigger": "SetVelocity", "contents": "SetVelocity( ${1:Player Origin} );" },
{ "trigger": "SetViewModel", "contents": "SetViewModel( ${1:Viewmodel Name} );" },
{ "trigger": "SetViewmodelDepthOfField", "contents": "SetViewmodelDepthOfField( ${1:Start}, ${2:End} );" },
{ "trigger": "SetVisibletoPlayer", "contents": "SetVisibletoPlayer( ${1} );" },
{ "trigger": "SetVisibleToSquad", "contents": "SetVisibleToSquad( ${1} );" },
{ "trigger": "SetVolFog", "contents": "SetVolFog( ${1} );" },
{ "trigger": "SetVoteNoCount", "contents": "SetVoteNoCount( ${1:Number Count} );" },
{ "trigger": "SetVoteString", "contents": "SetVoteString( ${1:String} );" },
{ "trigger": "SetVoteTime", "contents": "SetVoteTime( ${1:Time} );" },
{ "trigger": "SetVoteYesCount", "contents": "SetVoteYesCount( ${1:Number Count} );" },
{ "trigger": "SetWaitNode", "contents": "SetWaitNode( ${1} );" },
{ "trigger": "SetWaitSpeed", "contents": "SetWaitSpeed( ${1} );" },
{ "trigger": "SetWayPoint", "contents": "SetWayPoint( ${1:Constant Size}, ${2:Offscreen Material Name} );" },
{ "trigger": "SetWeaponAmmoClip", "contents": "SetWeaponAmmoClip( ${1:Weapon Name}, ${2:Ammunition} );" },
{ "trigger": "SetWeaponAmmoStock", "contents": "SetWeaponAmmoStock( ${1:Weapon Name}, ${2:Ammunition} );" },
{ "trigger": "SetWinningPlayer", "contents": "SetWinningPlayer( ${1:Player} );" },
{ "trigger": "SetWinningTeam", "contents": "SetWinningTeam( ${1:Team} );" },
{ "trigger": "SetYawSpeed", "contents": "SetYawSpeed( ${1} );" },
{ "trigger": "share_screen", "contents": "share_screen( ${1:player},${2:toggle},${3:instant} );//maps\\_utility.gsc:"},
{ "trigger": "ShellShock", "contents": "ShellShock( ${1:Shellshock Name}, ${2:Duration}, ${3:Override Cheat} );" },
{ "trigger": "shock_ondeath", "contents": "shock_ondeath( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "shock_onexplosion", "contents": "shock_onexplosion( ${1:damage} );//maps\\_utility.gsc:"},
{ "trigger": "shock_onpain", "contents": "shock_onpain( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "Shoot", "contents": "Shoot( ${1:Accuracy Modifier}, ${2:Shoot Override Vector} );" },
{ "trigger": "ShootBlank", "contents": "ShootBlank( ${1} );" },
{ "trigger": "ShootTurret", "contents": "ShootTurret( ${1} );" },
{ "trigger": "shortenColor", "contents": "shortenColor( ${1:color} );//maps\\_utility.gsc:"},
{ "trigger": "Show", "contents": "Show( ${1} );" },
{ "trigger": "show_all_player_models", "contents": "show_all_player_models( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "ShowAllParts", "contents": "ShowAllParts( ${1} );" },
{ "trigger": "ShowPart", "contents": "ShowPart( ${1:Tag Name}, ${2:Model Name} );" },
{ "trigger": "ShowScoreBoard", "contents": "ShowScoreBoard( ${1} );" },
{ "trigger": "ShowToPlayer", "contents": "ShowToPlayer( ${1:Player} );" },
{ "trigger": "ShowViewModel", "contents": "ShowViewModel( ${1} );" },
{ "trigger": "SightConeTrace", "contents": "SightConeTrace( ${1:Sight Position}, ${2:Ignore Entity} );" },
{ "trigger": "SightTracePassed", "contents": "SightTracePassed( ${1:Start},${2:End},${3:Hit Characters},${4:Ignore Entity});" },
{ "trigger": "sign", "contents": "sign( ${1:x} );//common_scripts\\utility.gsc:"},
{ "trigger": "Sin", "contents": "Sin( ${1:Angle} );" },
{ "trigger": "slowmo_end", "contents": "slowmo_end( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "slowmo_lerp_in", "contents": "slowmo_lerp_in( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "slowmo_lerp_out", "contents": "slowmo_lerp_out( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "slowmo_setlerptime_in", "contents": "slowmo_setlerptime_in( ${1:time} );//maps\\_utility.gsc:"},
{ "trigger": "slowmo_setlerptime_out", "contents": "slowmo_setlerptime_out( ${1:time} );//maps\\_utility.gsc:"},
{ "trigger": "slowmo_setspeed_norm", "contents": "slowmo_setspeed_norm( ${1:speed} );//maps\\_utility.gsc:"},
{ "trigger": "slowmo_setspeed_slow", "contents": "slowmo_setspeed_slow( ${1:speed} );//maps\\_utility.gsc:"},
{ "trigger": "slowmo_start", "contents": "slowmo_start( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "SnapshotsAcknowledged", "contents": "SnapshotsAcknowledged( ${1} );" },
{ "trigger": "Solid", "contents": "Solid( ${1} );" },
{ "trigger": "SoundExists", "contents": "SoundExists( Sound Aliases Name );" },
{ "trigger": "SoundFade", "contents": "SoundFade( ${1:Time} );" },
{ "trigger": "Spawn", "contents": "Spawn( ${1:Class Name}, ${2:Origin}, ${3:Flags}, ${4:Radius}, ${5:Height} );" },
{ "trigger": "spawn_ai", "contents": "spawn_ai( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "spawn_anim_model", "contents": "spawn_anim_model( ${1:animname},${2:origin} );//maps\\_utility.gsc:"},
{ "trigger": "spawn_failed", "contents": "spawn_failed( ${1:spawn} );//maps\\_utility.gsc:"},
{ "trigger": "spawn_reinforcement", "contents": "spawn_reinforcement( ${1:classname},${2:color} );//maps\\_utility.gsc:"},
{ "trigger": "spawn_setcharacter", "contents": "spawn_setcharacter( ${1:data} );//maps\\_utility.gsc:"},
{ "trigger": "spawn_zombie", "contents": "spawn_zombie( ${1:spawner},${2:target_name} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "SpawnActor", "contents": "SpawnActor( ${1} );" },
{ "trigger": "SpawnFakeEnt", "contents": "SpawnFakeEnt( ${1} );" },
{ "trigger": "SpawnFx", "contents": "SpawnFx( ${1} );" },
{ "trigger": "SpawnStruct", "contents": "SpawnStruct( ${1} );" },
{ "trigger": "SpawnTurret", "contents": "SpawnTurret( ${1:Class Name}, ${2:Origin}, ${3:Weapon Info Name} );" },
{ "trigger": "SpawnVehicle", "contents": "SpawnVehicle( ${1:Model Name}, ${2:Target Name}, ${3:Vehicle Type}, ${4:Origin}, ${5:Angles} );" },
{ "trigger": "SplitArgs", "contents": "SplitArgs( ${1} );" },
{ "trigger": "SplitViewAllowed", "contents": "SplitViewAllowed( ${1} );" },
{ "trigger": "spread_array_thread", "contents": "spread_array_thread( ${1:entities},${2:process},${3:var1},${4:var2},${5:var3} );//maps\\_utility.gsc:"},
{ "trigger": "StalingradSpawn", "contents": "StalingradSpawn( ${1:Target Name} );" },
{ "trigger": "StartCameraTween", "contents": "StartCameraTween( ${1} );" },
{ "trigger": "StartCoverArrival", "contents": "StartCoverArrival( ${1:Yaw Angle} );" },
{ "trigger": "StartEngineSound", "contents": "StartEngineSound( ${1} );" },
{ "trigger": "StartFiring", "contents": "StartFiring( ${1} );" },
{ "trigger": "StartIgnoringSpotLight", "contents": "StartIgnoringSpotLight( ${1} );" },
{ "trigger": "StartPath", "contents": "StartPath( ${1} );" },
{ "trigger": "StartRagdoll", "contents": "StartRagdoll( ${1:Rig Index} );" },
{ "trigger": "StartScriptedAnim", "contents": "StartScriptedAnim( ${1:Notify}, ${2:Origin}, ${3:Angles}, ${4:Animation}, ${5:Mode}, ${6:Root} );" },
{ "trigger": "StartTanning", "contents": "StartTanning( ${1} );" },
{ "trigger": "StartTraverseArrival", "contents": "StartTraverseArrival( ${1:Yaw Angle} );" },
{ "trigger": "StartWaterSheetFX", "contents": "StartWaterSheetFX( ${1} );" },
{ "trigger": "stop_exploder", "contents": "stop_exploder( ${1:num} );//maps\\_utility.gsc:"},
{ "trigger": "stop_loop_sound_on_entity", "contents": "stop_loop_sound_on_entity( ${1:alias} );//maps\\_utility.gsc:"},
{ "trigger": "stop_magic_bullet_shield", "contents": "stop_magic_bullet_shield( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "StopAllRumbles", "contents": "StopAllRumbles( ${1} );" },
{ "trigger": "StopAnimScripted", "contents": "StopAnimScripted( ${1} );" },
{ "trigger": "StopCinematicInGame", "contents": "StopCinematicInGame( ${1} );" },
{ "trigger": "StopCurve", "contents": "StopCurve( ${1} );" },
{ "trigger": "StopEngineSound", "contents": "StopEngineSound( ${1} );" },
{ "trigger": "StopFireWeapon", "contents": "StopFireWeapon( ${1} );" },
{ "trigger": "StopFiring", "contents": "StopFiring( ${1} );" },
{ "trigger": "StopIgnoringSpotLight", "contents": "StopIgnoringSpotLight( ${1} );" },
{ "trigger": "StopLocalSound", "contents": "StopLocalSound( ${1:Sound Aliases Name} );" },
{ "trigger": "StopLookAt", "contents": "StopLookAt( ${1:Turn Acceleration} );" },
{ "trigger": "StopLoopSound", "contents": "StopLoopSound( ${1} );" },
{ "trigger": "StopRumble", "contents": "StopRumble( ${1:Rumble Name} );" },
{ "trigger": "StopShellShock", "contents": "StopShellShock( ${1} );" },
{ "trigger": "StopShoot", "contents": "StopShoot( ${1} );" },
{ "trigger": "StopSounds", "contents": "StopSounds( ${1} );" },
{ "trigger": "StopUseAnimTree", "contents": "StopUseAnimTree( ${1} );" },
{ "trigger": "StopUseTurret", "contents": "StopUseTurret( ${1} );" },
{ "trigger": "StopWatersheetFX", "contents": "StopWatersheetFX( ${1} );" },
{ "trigger": "string", "contents": "string( ${1:num} );//maps\\_utility.gsc:"},
{ "trigger": "string_to_float", "contents": "string_to_float( ${1:string} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "StrTok", "contents": "StrTok( ${1:String}, ${2:Delimiter} );" },
{ "trigger": "struct_arraySpawn", "contents": "struct_arraySpawn( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "struct_class_init", "contents": "struct_class_init( ${1} );//common_scripts\\utility.gsc:"},
{ "trigger": "structarray_add", "contents": "structarray_add( ${1:struct},${2:object} );//maps\\_utility.gsc:"},
{ "trigger": "structarray_remove", "contents": "structarray_remove( ${1:struct},${2:object} );//maps\\_utility.gsc:"},
{ "trigger": "structarray_shuffle", "contents": "structarray_shuffle( ${1:struct},${2:shuffle} );//maps\\_utility.gsc:"},
{ "trigger": "structarray_swaptolast", "contents": "structarray_swaptolast( ${1:struct},${2:object} );//maps\\_utility.gsc:"},
{ "trigger": "Suicide", "contents": "Suicide( ${1} );" },
{ "trigger": "sun_light_fade", "contents": "sun_light_fade( ${1:startSunColor},${2:endSunColor},${3:fTim} );//maps\\_utility.gsc:"},
{ "trigger": "switch", "contents": "switch( ${1:var} ){\n\t${2:type case}\n\tdefault:\n\t\tbreak;\n}" },
{ "trigger": "SwitchToOffhand", "contents": "SwitchToOffhand( ${1:Weaponfile Name} );" },
{ "trigger": "SwitchToWeapon", "contents": "SwitchToWeapon( ${1:Weaponfile Name} );" },
{ "trigger": "SyncSystemStates", "contents": "SyncSystemStates( ${1} );" },
{ "trigger": "TableLookup", "contents": "TableLookup( ${1:File Name}, ${2:Search Column Number}, ${3:Search Value}, ${4:Return Value Column Number} );" },
{ "trigger": "TableLookupiStringTakeAllWeapons", "contents": "TableLookupiStringTakeAllWeapons( ${1} );" },
{ "trigger": "TakeWeapon", "contents": "TakeWeapon( ${1:Weaponfile Name} );" },
{ "trigger": "Tan", "contents": "Tan( ${1:Angle} );" },
{ "trigger": "Target_ClearReticleLockOn", "contents": "Target_ClearReticleLockOn( ${1} );" },
{ "trigger": "Target_GetArray", "contents": "Target_GetArray( ${1} );" },
{ "trigger": "Target_IsInCircle", "contents": "Target_IsInCircle( ${1:Target Entity}, ${2:Player}, ${3:Fov}, ${4:Radius} );" },
{ "trigger": "Target_IsInRect", "contents": "Target_IsInRect( ${1:Target Entity}, ${2:Player}, ${3:Fov}, ${4:Half Width}, ${5:Half Height} );" },
{ "trigger": "Target_IsTarget", "contents": "Target_IsTarget( ${1:Entity} );" },
{ "trigger": "Target_Remove", "contents": "Target_Remove( ${1:Target Entity} );" },
{ "trigger": "Target_Set", "contents": "Target_Set( ${1:Target Entity}, ${2:Target Offset} );" },
{ "trigger": "Target_SetAttackMode", "contents": "Target_SetAttackMode( ${1:Target Entity}, ${2:Mode} );" },
{ "trigger": "Target_SetJavelinOnly", "contents": "Target_SetJavelinOnly( ${1:Target Entity}, ${2:True/False?} );" },
{ "trigger": "Target_SetOffscreenShader", "contents": "Target_SetOffscreenShader( ${1:Target Entity}, ${2:Material Name} );" },
{ "trigger": "Target_SetShader", "contents": "Target_SetShader( ${1:Target Entity}, ${2:Material Name} );" },
{ "trigger": "Target_StartReticleLockOn", "contents": "Target_StartReticleLockOn( ${1:Target Entity}, ${2:Duration} );" },
{ "trigger": "Teleport", "contents": "Teleport( ${1:Position}, ${2:Angles} );" },
{ "trigger": "ThreatBiasGroupExists", "contents": "ThreatBiasGroupExists( ${1} );" },
{ "trigger": "ThrowDownWeapon", "contents": "ThrowDownWeapon( ${1} );" },
{ "trigger": "ThrowGrenade", "contents": "ThrowGrenade( ${1} );" },
{ "trigger": "ThrowGrenadeAtPlayerASAP", "contents": "ThrowGrenadeAtPlayerASAP( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "TimedRadiusDamage", "contents": "TimedRadiusDamage( ${1} );" },
{ "trigger": "timeout", "contents": "timeout( ${1:timeout} );//maps\\_utility.gsc:"},
{ "trigger": "timer", "contents": "timer( ${1:time} );//maps\\_utility.gsc:"},
{ "trigger": "timer_actual", "contents": "timer_actual( ${1:kills},${2:tim} );//maps\\_zombiemode_utility.gsc:"},
{ "trigger": "ToggleIK", "contents": "ToggleIK( ${1} );" },
{ "trigger": "ToLower", "contents": "ToLower( ${1:String} );" },
{ "trigger": "track", "contents": "track( ${1:spot_to_trac} );//common_scripts\\utility.gsc:"},
{ "trigger": "TrackScriptState", "contents": "TrackScriptState( ${1:New State Name}, ${2:Reason} );" },
{ "trigger": "TraverseMode", "contents": "TraverseMode( ${1:Traverse Mode} );" },
{ "trigger": "trigger_coop_warp", "contents": "trigger_coop_warp( ${1:trigger} );//maps\\_utility.gsc:"},
{ "trigger": "trigger_off", "contents": "trigger_off( ${1:name},${2:type} );//common_scripts\\utility.gsc:"},
{ "trigger": "trigger_on", "contents": "trigger_on( ${1:name},${2:type} );//common_scripts\\utility.gsc:"},
{ "trigger": "trigger_wait", "contents": "trigger_wait( ${1:strName},${2:strKey} );//maps\\_utility.gsc:"},
{ "trigger": "trigger_wait_targetname", "contents": "trigger_wait_targetname( ${1:strName} );//maps\\_utility.gsc:"},
{ "trigger": "TriggerFX", "contents": "TriggerFX( ${1:Effect Entity}, ${2:When} );" },
{ "trigger": "TrimPathtoAttack", "contents": "TrimPathtoAttack( ${1} );" },
{ "trigger": "try_forever_spawn", "contents": "try_forever_spawn( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "turret_ignore_me_timer", "contents": "turret_ignore_me_timer( ${1:time} );//maps\\_utility.gsc:"},
{ "trigger": "TurretFireDisable", "contents": "TurretFireDisable( ${1} );" },
{ "trigger": "TurretFireEnable", "contents": "TurretFireEnable( ${1} );" },
{ "trigger": "UnLink", "contents": "UnLink( ${1} );" },
{ "trigger": "UnlockLightVis", "contents": "UnlockLightVis( ${1} );" },
{ "trigger": "unset_forcegoal", "contents": "unset_forcegoal( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "UnSetPerk", "contents": "UnSetPerk( ${1:Perk Name} );" },
{ "trigger": "UnSetTurretNode", "contents": "UnSetTurretNode( ${1:Node} );" },
{ "trigger": "UpdateClientNames", "contents": "UpdateClientNames( ${1} );" },
{ "trigger": "UpdateDMScores", "contents": "UpdateDMScores( ${1} );" },
{ "trigger": "UpdateGamerProfile", "contents": "UpdateGamerProfile( ${1} );" },
{ "trigger": "UpdatePlayerSightAccuracy", "contents": "UpdatePlayerSightAccuracy( ${1} );" },
{ "trigger": "UpdateProne", "contents": "UpdateProne( ${1:Animation A}, ${2:Animation B}, ${3:Goal Weight}, ${4:Goal Time}, ${5:Rate} );" },
{ "trigger": "UpdateScores", "contents": "UpdateScores( ${1} );" },
{ "trigger": "UploadScore", "contents": "UploadScore( ${1:Mission}, ${2:Score} );" },
{ "trigger": "UploadTime", "contents": "UploadTime( ${1:Mission}, ${2:Time} );" },
{ "trigger": "UseAnimTree", "contents": "UseAnimTree( ${1:Animation Tree} );" },
{ "trigger": "UseButtonPressed", "contents": "UseButtonPressed( ${1} );" },
{ "trigger": "UseBy", "contents": "UseBy( ${1:Using Entity} );" },
{ "trigger": "UseCoverNode", "contents": "UseCoverNode( ${1:Path Node} );" },
{ "trigger": "UseReacquireNode", "contents": "UseReacquireNode( ${1:Node} );" },
{ "trigger": "UseTriggerRequireLookAt", "contents": "UseTriggerRequireLookAt( ${1} );" },
{ "trigger": "UseTurret", "contents": "UseTurret( ${1:Turret} );" },
{ "trigger": "UseVehicle", "contents": "UseVehicle( ${1} );" },
{ "trigger": "using_animtree\t animtree", "contents": "#using_animtree(  \"${1}\"  );"},
{ "trigger": "vector_multiply", "contents": "vector_multiply( ${1:vec},${2:dif} );//maps\\_utility.gsc:"},
{ "trigger": "VectorCross", "contents": "VectorCross( ${1} );" },
{ "trigger": "VectorDot", "contents": "VectorDot( ${1:Vector A}, ${2:Vector B} );" },
{ "trigger": "VectorFromLineToPoint", "contents": "VectorFromLineToPoint( ${1:Line A}, ${2:Line 2}, ${3:Point} );" },
{ "trigger": "VectorLerp", "contents": "VectorLerp( ${1:From}, ${2:To}, ${3:Fraction} );" },
{ "trigger": "VectorNormalize", "contents": "VectorNormalize( ${1:Vector} );" },
{ "trigger": "vectorScale", "contents": "vectorScale( ${1:vector},${2:scale} );//common_scripts\\utility.gsc:"},
{ "trigger": "VectorToAngles", "contents": "VectorToAngles( ${1:Vector} );" },
{ "trigger": "VehForceMaterialSpeed", "contents": "VehForceMaterialSpeed( ${1} );" },
{ "trigger": "VehGetModel", "contents": "VehGetModel( ${1} );" },
{ "trigger": "vehicle_detachfrompath", "contents": "vehicle_detachfrompath( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "vehicle_dynamicpath", "contents": "vehicle_dynamicpath( ${1:node},${2:bwaitforstart} );//maps\\_utility.gsc:"},
{ "trigger": "vehicle_land", "contents": "vehicle_land( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "vehicle_liftoff", "contents": "vehicle_liftoff( ${1:height} );//maps\\_utility.gsc:"},
{ "trigger": "vehicle_resumepath", "contents": "vehicle_resumepath( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "Vibrate", "contents": "Vibrate( ${1:Direction Vector}, ${2:Amplitude}, ${3:Period}, ${4:Time} );" },
{ "trigger": "view_tag", "contents": "view_tag( ${1:tag} );//maps\\_utility.gsc:"},
{ "trigger": "ViewKick", "contents": "ViewKick( ${1:Force}, ${2:Source} );" },
{ "trigger": "VisionSetNaked", "contents": "VisionSetNaked( ${1:Visionset Name}, ${2:Transition Time} );" },
{ "trigger": "VisionSetNight", "contents": "VisionSetNight( ${1:Visionset Name}, ${2:Transition Time} );" },
{ "trigger": "wait", "contents": "wait( ${1} );" },
{ "trigger": "wait_for_all_players", "contents": "wait_for_all_players( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "wait_for_buffer_time_to_pass", "contents": "wait_for_buffer_time_to_pass( ${1:last_queue_time},${2:buffer_time} );//maps\\_utility.gsc:"},
{ "trigger": "wait_for_either_trigger", "contents": "wait_for_either_trigger( ${1:msg1},${2:msg2} );//maps\\_utility.gsc:"},
{ "trigger": "wait_for_first_player", "contents": "wait_for_first_player( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "wait_for_flag_or_timeout", "contents": "wait_for_flag_or_timeout( ${1:msg},${2:timer} );//maps\\_utility.gsc:"},
{ "trigger": "wait_for_script_noteworthy_trigger", "contents": "wait_for_script_noteworthy_trigger( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "wait_for_targetname_trigger", "contents": "wait_for_targetname_trigger( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "wait_for_trigger_or_timeout", "contents": "wait_for_trigger_or_timeout( ${1:timer} );//maps\\_utility.gsc:"},
{ "trigger": "wait_network_frame", "contents": "wait_network_frame( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "waitSpread", "contents": "waitSpread( ${1:start},${2:end} );//maps\\_utility.gsc:"},
{ "trigger": "waittill", "contents": "waittill( ${1} );" },
{ "trigger": "waittill\ttrigger", "contents": "waittill( ${1:\"trigger\"}${2:, player} );" },
{ "trigger": "waittill\tdeath", "contents": "waittill( ${1:\"death\"} );" },
{ "trigger": "waittill_aigroupcleared", "contents": "waittill_aigroupcleared( ${1:aigroup} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_aigroupcount", "contents": "waittill_aigroupcount( ${1:aigroup},${2:count} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_any", "contents": "waittill_any( ${1:string1},${2:string2},${3:string3},${4:string4},${5:string5} );//common_scripts\\utility.gsc:"},
{ "trigger": "waittill_any_ents", "contents": "waittill_any_ents( ${1:ent1},${2:string1},${3:ent2},${4:string2},${5:ent3},${6:string3},${7:ent4},${8:string4},${9:ent5},${10:string5},${11:ent6},${12:string6},${13:ent7},${14:string7} );//common_scripts\\utility.gsc:"},
{ "trigger": "waittill_any_return", "contents": "waittill_any_return( ${1:string1},${2:string2},${3:string3},${4:string4},${5:string5} );//common_scripts\\utility.gsc:"},
{ "trigger": "waittill_dead", "contents": "waittill_dead( ${1:guys},${2:num},${3:timeoutLength} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_dead_or_dying", "contents": "waittill_dead_or_dying( ${1:guys},${2:num},${3:timeoutLength} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_dead_or_dying_thread", "contents": "waittill_dead_or_dying_thread( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_dead_thread", "contents": "waittill_dead_thread( ${1:ent} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_dead_timeout", "contents": "waittill_dead_timeout( ${1:timeoutLength} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_either", "contents": "waittill_either( ${1:msg1},${2:msg2} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_either_function", "contents": "waittill_either_function( ${1:func1},${2:parm1},${3:func2},${4:parm2} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_msg", "contents": "waittill_msg( ${1:msg} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_multiple", "contents": "waittill_multiple( ${1:string1},${2:string2},${3:string3},${4:string4},${5:string5} );//common_scripts\\utility.gsc:"},
{ "trigger": "waittill_multiple_ents", "contents": "waittill_multiple_ents( ${1:ent1},${2:string1},${3:ent2},${4:string2},${5:ent3},${6:string3},${7:ent4},${8:string4} );//common_scripts\\utility.gsc:"},
{ "trigger": "waittill_notify_or_timeout", "contents": "waittill_notify_or_timeout( ${1:msg},${2:timer} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_objective_event", "contents": "waittill_objective_event( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_objective_event_notrigger", "contents": "waittill_objective_event_notrigger( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_player_lookat", "contents": "waittill_player_lookat( ${1:dot},${2:timer},${3:dot_only} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_player_lookat_for_time", "contents": "waittill_player_lookat_for_time( ${1:timer},${2:dot},${3:dot_only} );//maps\\_utility.gsc:"},
{ "trigger": "waittill_string", "contents": "waittill_string( ${1:msg},${2:ent} );//common_scripts\\utility.gsc:"},
{ "trigger": "waittillend", "contents": "waittillend( ${1:ms} );//common_scripts\\utility.gsc:"},
{ "trigger": "warp_a_player", "contents": "warp_a_player( ${1:warp_point} );//maps\\_utility.gsc:"},
{ "trigger": "warp_player_end", "contents": "warp_player_end( ${1} );//maps\\_utility.gsc:"},
{ "trigger": "warp_player_start", "contents": "warp_player_start( ${1:fade_time} );//maps\\_utility.gsc:"},
{ "trigger": "warp_spot_is_safe", "contents": "warp_spot_is_safe( ${1:struct},${2:avoid_ents} );//maps\\_utility.gsc:"},
{ "trigger": "waterfx", "contents": "waterfx( ${1:endflag} );//maps\\_utility.gsc:"},
{ "trigger": "WaterPlop", "contents": "WaterPlop( ${1} );" },
{ "trigger": "WaterSimEnable", "contents": "WaterSimEnable( ${1} );" },
{ "trigger": "WeaponAltWeaponName", "contents": "WeaponAltWeaponName( ${1} );" },
{ "trigger": "WeaponBayonetInfo", "contents": "WeaponBayonetInfo( ${1} );" },
{ "trigger": "WeaponClass", "contents": "WeaponClass( ${1} );" },
{ "trigger": "WeaponClipSize", "contents": "WeaponClipSize( ${1} );" },
{ "trigger": "WeaponFightDist", "contents": "WeaponFightDist( ${1} );" },
{ "trigger": "WeaponFireTime", "contents": "WeaponFireTime( ${1} );" },
{ "trigger": "WeaponHasBayonet", "contents": "WeaponHasBayonet( ${1} );" },
{ "trigger": "WeaponInventoryType", "contents": "WeaponInventoryType( ${1} );" },
{ "trigger": "WeaponIsBoltAction", "contents": "WeaponIsBoltAction( ${1} );" },
{ "trigger": "WeaponIsGasWeapon", "contents": "WeaponIsGasWeapon( ${1} );" },
{ "trigger": "WeaponIsSemiAuto", "contents": "WeaponIsSemiAuto( ${1} );" },
{ "trigger": "WeaponLockFinalize", "contents": "WeaponLockFinalize( ${1:Entity} );" },
{ "trigger": "WeaponLockFree", "contents": "WeaponLockFree( ${1} );" },
{ "trigger": "WeaponLockNoClearance", "contents": "WeaponLockNoClearance( ${1:Bool?} );" },
{ "trigger": "WeaponLockStart", "contents": "WeaponLockStart( ${1:Entity} );" },
{ "trigger": "WeaponLockTargetTooClose", "contents": "WeaponLockTargetTooClose( ${1:Bool?} );" },
{ "trigger": "WeaponMaxAmmo", "contents": "WeaponMaxAmmo( ${1} );" },
{ "trigger": "WeaponMaxDist", "contents": "WeaponMaxDist( ${1} );" },
{ "trigger": "WeaponStartAmmo", "contents": "WeaponStartAmmo( ${1} );" },
{ "trigger": "WeaponType", "contents": "WeaponType( ${1} );" },
{ "trigger": "while\tconditional loop", "contents": "while( ${1} ){\n\t${2}\n}" },
{ "trigger": "while\tinfinite loop", "contents": "while( 1 ){\n\t${1}\n}" },
{ "trigger": "within_fov", "contents": "within_fov( ${1:start_origin},${2:start_angles},${3:end_origin},${4:fov} );//maps\\_utility.gsc:"},
{ "trigger": "WithinApproxPathDist", "contents": "WithinApproxPathDist( ${1:Distace} );" },
{ "trigger": "WorldEntNumber", "contents": "WorldEntNumber( ${1} );" }

	]
}
